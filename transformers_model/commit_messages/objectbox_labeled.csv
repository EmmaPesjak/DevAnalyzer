"package rename to io.objectbox","Refactoring"
"move java tests to tests sub dir","Refactoring"
"minor improvements to flatbuffers model, move java model classes with cp and sed","Refactoring"
"fix imports for new model package","Setup"
"more flexible BoxStoreBuilder.java and android Context support","Database"
"defaultStore in BoxStoreBuilder.java","Database"
"move defaultStore in BoxStore.java","Refactoring"
"collect entity classes using builder","Database"
"renamed some VS stuff to ObjectBox, removed .gitignore for tests","Refactoring"
"load lib objectbox","Setup"
"minor","Other"
"added property flag NON_PRIMITIVE_TYPE

added Properties class

give Cursors a Properties instance

verify entity is know before returning a box

prepared 2nd entity TestEntityMinimal.java for unit testing

sharedReadTx to make txs across boxes work

fix some test deps","Feature Addition"
"Box: some JavaDocs, shortcut for null or empty collections","Documentation"
"prep daocompat for upload","Setup"
"find scalars using a list","Feature Addition"
"Java: find string returns a list","Feature Addition"
"added find()s to Box","Feature Addition"
"various, e.g. running bulk perf test from example app","Testing"
"perf test: added fixed byte array with length 6","Testing"
"find string using property id","Feature Addition"
"add version","Setup"
"getting all entities in native, crashes at the moment (local reference table overflow (max=512)) and is slower on Desktop when deleting local refs

Java_io_objectbox_Cursor_nativePutSimpleEntity

Basic copy of query and builder API.

Initial query implementation using objectbox find.

Use find method overloads based on value type.

Java_io_objectbox_Cursor_nativeFindScalarPropertyId","Database"
"testUnalignedMemoryAccess","Testing"
"CursorBytesTest.java: Sizes must be multiple of 4 (currently not enforced)","Testing"
"fix some java tests: pad bytes to length 4","Testing"
"moved objectbox-api to objectbox-java-api","Refactoring"
"prepared Query&Builder on the Java side","Database"
"fixes to build Query in Java","Bug Fix"
"added @Temporary to API","Feature Addition"
"init Property IDs (for query builder)","Database"
"fixes to make Java Query work","Bug Fix"
"count for Java Query","Database"
"!=, >, < for scalars","Feature Addition"
"== and != for String","Feature Addition"
"contains, startsWith, and endsWith for String","Feature Addition"
"java find with offset and limit","Database"
"in and betwwen for Java QueryBuilder (FIXME DbException: invalid unordered_map<K, T> key)

Java query builder: null/notNull && FP

Fix TestEntityProperties types and all properties field.

- Also populate simpleLong property in Query test.

Support additional query conditions.

Do not validate values for null/notNull operations.

Actually copy values for in op.

Add Float support to PropertyCondition greater/less ops.

- They support Double, so they should support Float as well.

rename WhereCondition to QueryCondition","Database"
"fix tests using DummyProperties","Testing"
"Add contains, starts/endsWith to Property class.

- Replacement for like() from greenDAO.","Feature Addition"
"prep some PropertyConverter stuff to happen in C++","Feature Addition"
"fix","Bug Fix"
"Generate converter info into Property Java class (0.9.1-SNAPSHOT)","Feature Addition"
"make Properties available to BoxStore, prep native registration","Feature Addition"
"fix JniPropertyConverter.javaClassName","Bug Fix"
"added testBigResultList","Testing"
"fix JavaDoc errors","Bug Fix"
"make property flags uint and type ushort","Feature Addition"
"added idAssignable flag","Feature Addition"
"Put @Id(assignable = true) on Order","Feature Addition"
"Need to retain Entity annotation for ProGuard. #25

- With RetentionPolicy.SOURCE the annotation is already stripped by the compiler, before ProGuard gets a chance to transform the byte code. So set at least RetentionPolicy.CLASS.","Bug Fix"
"added refId to @Entity and @Property","Database"
"add refId and id to model","Database"
"added id and refId to ModelBuilder","Database"
"ignore tests with size != modulo 4","Testing"
"add indexId to model","Database"
"consider ids in generator","Other"
"fixes for model IDs","Bug Fix"
"add lastEntityId and lastIndexId to model","Database"
"lastEntityId lastIndexId in model builder, etc","Database"
"lastEntityId lastIndexId in generator, fix modelIndexId in ftl","Database"
"RetentionPolicy.CLASS for a couple more annotations","Feature Addition"
"added lastPropertyId to model entity","Database"
"added lastEntityId to model builder and ftl","Database"
"generator fixes","Bug Fix"
"test adjustments for recent schema sync changes (ref IDs etc.)","Testing"
"added OrderFlags","Feature Addition"
"QueryOrder: support for null flags (first, last, zero)","Database"
"removed NULLS_FIRST order flag, CASE_SENSITIVE replaces IGNORE_CASE_ASCII","Feature Addition"
"added order to QueryBuilder.java","Database"
"improved JavaDoc on queries","Documentation"
"JNI call find without offset/limit if possible","Other"
"StringOrder for string query conditions","Database"
"use collect400000 and collect430000 to consume non-primitive values first","Feature Addition"
"collect002033 for FP intensive entities, added Char type to generator","Feature Addition "
"collect004000 for primitives only","Feature Addition"
"properties to begin with lower char in accordance to JPA2","Feature Addition"
"Store and verify id in generated Property","Database"
"createMinMaxVisitor with type trades to compile with VS, connected new query aggregates to java, remove too but still throws","Database"
"Query.java: fix remove()","Database"
"add testFindKeysUnordered","Testing"
"return long for native QueryBuilder methods","Database"
"basic setParameter for Java","Feature Addition"
"Port stringOrderCollation to QueryBuilder.

- Though change signature to accept only new StringOrder constant instead of any SQLite collate string.

Support setParameter in daocompat, properly rebuild query.

- Support setParameter and undeprecate it.
- The ObjectBox query is now (re)built when creating a new query or resetting it (for a new thread). QueryBuilder now only records desired conditions and orders. Previously would simply re-use the same ObjectBox query object built by QueryBuilder, which would obviously not be re-set to initial values.

JNI/Java: setParameter for FP, between for FP

Support double values for setParameter.

- Also throw on unsupported parameter types.

Support double values for BETWEEN op.

- Add test.

add :tests:test-proguard","Database"
"@Retention(RetentionPolicy.CLASS) for all","Refactoring"
"make Query.setParameter return Query to make Query chainable","Database"
"0.9.3","Other"
"JNI for new Store and Tx methods (renewal etc.)","Feature Addition"
"fix TransactionPerfTest","Bug Fix"
"preped Cursor.renew(tx) in Java","Feature Addition"
"test for Cursor.renew(tx) in Java","Testing"
"runInReadTx","Feature Addition"
"testRunInReadTx_putFails","Testing"
"recycle and renew box reader instead of sharing to avoid readers to hold on to their data","Feature Addition"
"added CrashReportLogger from Java side","Feature Addition"
"fix tests the expect an ex type","Testing"
"BoxStore check if it need to unpack native lib from classpath (Windows)","Setup"
"Update flatbuffers to 03ee3db2408e477137c83195e0e18c26f9d2ab25","Refactoring"
"add native lib unpack logic for linux","Setup"
"embedd flatbuffers as source to fix dependency issue","Bug Fix"
"minor","Other"
"check for android native lib","Setup"
"relations: store target entity (WIP, not sure about using the name in the model)","Database"
"rename PropertyType_Reference to PropertyType_Reference","Refactoring"
"0.9.6-SNAPSHOT, VS updates, @Relation","Setup"
"typo","Refactoring"
"added DbDetachedException.java","Feature Addition"
"setting some years to 2017","Refactoring"
"fix setting boxStore, to-one relations now work!","Bug Fix"
"some fixes for relation","Bug Fix"
"prepared getBacklinkEntities to resolve to-many relations","Database"
"fixes to make to-many relations work","Bug Fix"
"added Box.attach for entities not originating from DB","Database"
"add Cursor.boxStoreForEntities etc.","Feature Addition"
"ToOne: Sketching a replacement for length generation of to-one getters","Feature Addition"
"use cursorConstructorCache for Transaction","Feature Addition"
"Box.getId, ReflectionCache","Feature Addition"
"make Property.id public final","Database"
"prepare ToOne to be used in generated to-one getters etc.","Feature Addition"
"various improvements to ToOne","Refactoring"
"fixes to make ToOne work","Bug Fix"
"Copied entity annotation test to java-test","Testing"
"0.9.7-SNAPSHOT","Other"
"rename to findIdsUnordered","Refactoring"
"added some putTestEntity methods to AbstractObjectBoxTest, rename to TestEntity_.java","Testing"
"Query.findLazy() returns LazyList","Feature Addition"
"renaming refID to uid on Java side","Refactoring"
"more renaming refId to uid on C++ side","Refactoring"
"some more renaming refID to uid on Java side","Refactoring"
"add LazyListTest to FunctionalTestSuite.java, move QueryTest.java","Refactoring"
"use IdUid for in model for last*Ids, more UID checks, e.g. check incoming vs existing UIDs","Feature Addition"
"add missing IdUid.java","Feature Addition"
"switched IdUid to struct","Refactoring"
"adjust Java part to IdUid model changes","Refactoring"
"added indexUid to FlatProperty&Property, CURRENT_META_VERSION = 2, MODEL_VERSION = 2, extended Schema-Entity-Flat-Roundtrip to check property/index IDs&UIDs","Feature Addition"
"Query: support for boolean and Date types","Feature Addition"
"Java QueryBuilder.notIn","Feature Addition"
"set versions to 0.9.7-2017-02-09","Setup"
"using io.objectbox:objectbox-generator:0.9.7-RC, fixing generated stuff","Other"
"added ObjectClassListener on Java side","Feature Addition"
"extended ObjectClassListenerTest","Other"
"added BoxStore.removeObjectClassListener()","Feature Addition"
"moved ModelUpdate, and ModelModifier away","Refactoring"
"changed listeners to Multiset","Refactoring"
"some docs for async transactions","Documentation"
"added close&finalize to Query","Database"
""Observer"name more en vogue these days...","Other"
"weak observers","Other"
"common thread pool, etc.","Feature Addition"
"rename addObjectClassObserver to subscribe etc.","Refactoring"
"added QueryObserver.java","Feature Addition"
"AbstractObjectBoxTest: use IDs from TestEntity_","Testing"
"General observers","Other"
"Transformer test","Testing"
"Scheduler test","Testing"
"testTransformerWithScheduler","Testing"
"remove obsolete ObjectClassObserver.java and Subscription (android)","Refactoring"
"Data prefix for Observer, Publisher, and Subscription classes","Other"
"SubscriptionBuilder: renamed subscribe() to observer(), JavaDocs; tests for ErrorObserver","Documentation"
"added basic JavaDocs for BoxStore, Box, SubscriptionBuilder","Documentation"
"Make ObjectClassPublisher.java use one thread for observer notifications","Feature Addition"
"updated javadoc for subscribing observers (threading)","Documentation"
"use generic Observer for Query","Database"
"archived: Query observer with Transformer (not weak!)","Other"
"Revert "archived: Query observer with Transformer (not weak!)"

This reverts commit a52e340acdbb0759da50d071733e418945e008a4.","Git Operation"
"Query uses SubscriptionBuilder via QueryPublisher","Database"
"testTranformer for Query","Database"
"call onError also for Observer exceptions","Bug Fix"
"JavaDoc updates for Observer exceptions","Documentation"
"Added JavaDoc to Query","Documentation"
"renamed to DataTransformer.java, added JavaDoc","Documentation"
"introduced DelegatingObserver to unwrap observers during removal, fixes a observer leak with wrapped observers","Bug Fix"
"use DataPublisherUtils.removeObserverFromCopyOnWriteSet in QueryPublisher.java, too","Other"
"fixing weak observers","Bug Fix"
"test tweek: allocating 16 MB chunks is faster than 64 & 128 (~0,3s instead of ~1s) and a bit faster than 8 and 32","Testing"
"0.9.8-RC2: Query.publish()","Feature Addition"
"SubscriptionBuilder.single()","Feature Addition"
"QueryBuilder.or()","Feature Addition"
"Query observers get results immediately with subscription","Feature Addition"
"QueryBuilder.and()","Feature Addition"
"improved state checks for Query","Database"
"SubscriptionBuilder.onlyChanges()","Feature Addition"
"AndroidScheduler.java: static method instead of field, JavaDoc","Documentation"
"some notes on weak references and stale query observers","Documentation"
"0.9.8-RC5, testRelationToOneQuery, javaDocs","Documentation"
"javadoc","Documentation"
"added testRunInReadTxAndThenPut (failing)","Testing"
"fix relation test for android","Testing"
"added MultithreadedRelationTest.java","Testing"
"JniBasicsTest to identify ReferenceTable leak","Testing"
"misc","Other"
"Query.forEach (FIXME: make public after runInReadTx is fixed)","Bug Fix"
"testForEach","Testing"
"tx is null despite check in constructor in some tests (called by finalizer):
Null check avoids NPE in finalizer and seems to stabilize Android instrumentation perf tests.","Testing"
"Cursor calls nativeDestroy now also when tx is closed","Feature Addition"
"make testTxGC() run finalizers to clean up dangling TXs to avoid them surving the store closing","Other"
"Transaction.java: WARN_FINALIZER debug flag to see finalizers in action","Bug Fix"
"AbstractObjectBoxTest.java: run finalizers to clean up before store closing","Testing"
"close transactions in unit tests","Testing"
"debug finalizer warning for Cursor","Bug Fix"
"clean read-only cursor from box after read-only TX completes","Bug Fix"
"make Query.forEach public","Refactoring"
"make handle package visible to avoid accessor creation","Feature Addition"
"V0.9.9","Other"
"api annotation changes for 0.9.10","Other"
"Query: remove private from native methods because they are typically accessed in an anonymous class, which requires the compiler to generate an access method","Feature Addition"
"remove getProperties call from QueryBuilder.java - does not seem to have an effect, but creates&releases a reader","Refactoring"
"custom toString for Cursor.java and Transaction.java","Feature Addition"
"Java: keep thread local reader after TX was committed, debugTransactions flag","Feature Addition"
"added IndexReaderRenewTest.java to verify today's changes","Testing"
"added IndexReaderRenewTest to FunctionalTestSuite.java","Testing"
"closeThreadResources() to free any cached resources tied to the calling thread (e.g. readers)","Feature Addition"
"added ObjectBoxThreadPool.java to release thread local resources, etc","Feature Addition"
"better error message for getBacklinkEntities (closes GitHub issue #41)","Feature Addition"
"Java version: 0.9.10-2017-04-13","Other"
"ModelRelation generation","Database"
"ToOne: remove SOURCE generics, add optional targetId property, added ToOneTest.java","Database"
"added AbstractRelationTest, used now by ToOneTest","Testing"
"Use IdSetter instead of dummy Cursor","Refactoring"
"Use IdGetter instead of dummy Cursor","Refactoring"
"de-activate Customer.java and Order.java in test","Testing"
"updates to generated test classes","Testing"
"sketching CursorFactory","Feature Addition"
"test fixes","Testing"
"fixed a couple of warnings","Bug Fix"
"started to use JSR-305 annotations","Documentation"
"more JSR-305 annotations","Documentation"
"updated flatbuffers to 340d1a3447cf821924aaaeefa5e6aef0fcdbf0c0","Git Operation"
"multiple refactorings: Cursor creation via factory, added RelationInfo, extended Properties class to be single source for entity info","Refactoring"
"renamed Properties to EntityInfo","Refactoring"
"regenerated test artifacts with current version","Testing"
"refactoring: RelationInfo.java used EntityInfo","Refactoring"
"ToOne puts via cursor if necessary","Other"
"ToOne fixes: isResolved(), cached target/id after put","Bug Fix"
"ToOne: flag to avoid calls to {@link #getTargetId()}, which may involve expensive reflection","Feature Addition"
"updated cursor gen","Refactoring"
"updated cursor gen","Refactoring"
"shorter @Generated (no more "hash = ")","Refactoring"
"removed @JoinEntity which does not make sense for ObjectBox","Refactoring"
"JavaDoc covering special @Uid values","Documentation"
"@NameInDb replaces attribute in @Property and @Entity","Refactoring"
"minor docs, todos, v","Documentation"
"fix testCloseThreadResources by using getReader()","Testing"
"Move loadLibrary into NativeLibraryLoader to make BoxStore mockable","Refactoring"
"minor, added javadocs","Documentation"
"added EntityInfo.getEntityId()","Feature Addition"
"first compilable ToMany","Database"
"improved ToMany.checkGetEntities()","Feature Addition"
"use ToMany in tests","Testing"
"started ToMany.add methods, experimental ListFactory.java","Feature Addition"
"lazy ListFactory init","Feature Addition"
"ToMany puts added target entities","Database"
"ensure order of added entities to ToMany","Database"
"internalRequiresPutTarget determines entities to put (avoids getting cursors if not required)","Database"
"remove with remove from DB","Refactoring"
"ToMany.removeFromTargetBox flag","Feature Addition"
"ToMany: add() removes entities from remove tracking, tests for remove","Feature Addition"
"ToMany.syncToTargetBox()","Feature Addition"
"ToMany.sortById()","Feature Addition"
"ToMany: clear all on reset(), JavaDoc","Documentation"
"JavaDocs","Documentation"
"added @Backlink","Feature Addition"
"for non-Android OS, prefer System.load over System.loadLibrary","Setup"
"throw to test sth in Jenkins","Setup"
"temp code to debug Jenkins","Bug Fix"
"revert debug code","Bug Fix"
"FunctionalTestSuite.java: Duplicate for gradle","Testing"
"added flags for entity meta data","Feature Addition"
"prep Java test for non-arg constructor usage","Testing"
"add NonArgConstructorTest to suite","Feature Addition"
"add NonArgConstructorTest to suite (Gradle)","Feature Addition"
"test nonArg constructor with more types","Testing"
"API: @Entity(useNoArgConstructor=...)","Feature Addition"
"minor JavaDoc","Documentation"
"start of objectbox-kotlin","Setup"
"move kotlin extentions into kotlin sub package","Refactoring"
"make ToOne and ToMany serializable","Feature Addition"
"shutdown thread pool when closing BoxStore","Feature Addition"
"minor: suppress warning","Other"
"dump thread stacks if pool does not terminate promptly","Feature Addition"
"testCloseBulk to check on Linux","Testing"
"testCloseBulk to check on Linux, now with 2 TXs","Testing"
"removed testCloseBulk again; no flaws discovered","Refactoring"
"allow setting max readers C++ & JNI","Other"
"simplify test","Testing"
"javadocs for BoxStoreBuilder","Documentation"
"minor","Other"
"BoxStoreBuilder.maxReaders, DbMaxReadersExceededException.java","Feature Addition"
"fix: DbMaxReadersExceededException needs error code constructor","Bug Fix"
"Jenkinsfile: enable extensive-tests for Java tests","Testing"
"property: added virtual flag and virtualTarget","Feature Addition"
"minor improvements for ToOne","Refactoring"
"ModelBuilder: allow passing virtualTarget","Feature Addition"
"ModelBuilder: allow passing virtualTarget 2","Feature Addition"
"temp debug log for setResolvedTarget","Bug Fix"
"debugRelations flag","Bug Fix"
"prevent two BoxStores from being opened for the same directory","Bug Fix"
"better to explicitly close store before building new one","Feature Addition"
"added Box.get(Iterable) and .getMap(Iterable)","Feature Addition"
"updated CHANGELOG.md, typo","Refactoring"
"add Box.get(long[] ids)","Feature Addition"
"Replaced some greenrobot references with ObjectBox","Refactoring"
"testCallInTxAsync_Error","Testing"
"testRunInTx_PutAfterRemoveAll","Testing"
"inValues method alias for Kotlin","Feature Addition"
"model support for Relation","Database"
"prep RelationInfo for relationId","Database"
"some prep ToMany.java for standalone relations","Database"
"some more prep for ToMany.java for standalone relations","Database"
"prep standalone relation modifications","Database"
"prep standalone relation loading","Database"
"ModelBuilder.java: add relations","Database"
"relation fixes","Database"
"fix EntityBuilder.relation model building","Bug Fix"
"adjustments to getting relations (Java)","Database"
"ToMany.java: Do not use Iterator with remove because not all List Types support it (e.g. CopyOnWriteArrayList)","Bug Fix"
"added stand alone relation tests","Testing"
"API_ added @TargetIdProperty, deprecated old annotations","Documentation"
"testToOneBulk and testToManyBulk","Testing"
"some renames, added ToManyGetter","Refactoring"
"use To[Many|One]Getters in RelationInfo.java","Feature Addition"
"make ToManyGetter return List","Feature Addition"
"added store.callInReadTx()","Feature Addition"
"Query: eager relations","Database"
"JavaDocs for QueryBuilder.eager(...)","Documentation"
"change RelationInfo signature","Documentation"
"BreakForEach for Query.forEach()","Bug Fix"
"added query filtering","Database"
"add javadoc-style","Documentation"
"add .gitignore","Setup"
"add gradle files","Setup"
"add Jenkinsfile","Setup"
"add gradle files for tests","Setup"
"for linux64, add native dependency","Setup"
"fix version for native dependency","Setup"