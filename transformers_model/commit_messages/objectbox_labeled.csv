"package rename to io.objectbox","Perfective"
"move java tests to tests sub dir","Perfective"
"minor improvements to flatbuffers model, move java model classes with cp and sed","Perfective"
"fix imports for new model package","Perfective"
"more flexible BoxStoreBuilder.java and android Context support","Perfective"
"defaultStore in BoxStoreBuilder.java","Other"
"move defaultStore in BoxStore.java","Perfective"
"collect entity classes using builder","Adaptive"
"renamed some VS stuff to ObjectBox, removed .gitignore for tests","Perfective"
"load lib objectbox","Other"
"minor","Other"
"added property flag NON_PRIMITIVE_TYPE

added Properties class

give Cursors a Properties instance

verify entity is know before returning a box

prepared 2nd entity TestEntityMinimal.java for unit testing

sharedReadTx to make txs across boxes work

fix some test deps","Adaptive"
"Box: some JavaDocs, shortcut for null or empty collections","Administrative"
"prep daocompat for upload","Adaptive"
"find scalars using a list","Adaptive"
"Java: find string returns a list","Adaptive"
"added find()s to Box","Adaptive"
"various, e.g. running bulk perf test from example app","Perfective"
"perf test: added fixed byte array with length 6","Adaptive"
"find string using property id","Adaptive"
"add version","Other"
"getting all entities in native, crashes at the moment (local reference table overflow (max=512)) and is slower on Desktop when deleting local refs

Java_io_objectbox_Cursor_nativePutSimpleEntity

Basic copy of query and builder API.

Initial query implementation using objectbox find.

Use find method overloads based on value type.

Java_io_objectbox_Cursor_nativeFindScalarPropertyId","Other"
"testUnalignedMemoryAccess","Adaptive"
"CursorBytesTest.java: Sizes must be multiple of 4 (currently not enforced)","Adaptive"
"fix some java tests: pad bytes to length 4","Adaptive"
"moved objectbox-api to objectbox-java-api","Perfective"
"prepared Query&Builder on the Java side","Adaptive"
"fixes to build Query in Java","Adaptive"
"added @Temporary to API","Adaptive"
"init Property IDs (for query builder)","Adaptive"
"fixes to make Java Query work","Corrective"
"count for Java Query","Adaptive"
"!=, >, < for scalars","Adaptive"
"== and != for String","Adaptive"
"contains, startsWith, and endsWith for String","Adaptive"
"java find with offset and limit","Adaptive"
"in and betwwen for Java QueryBuilder (FIXME DbException: invalid unordered_map<K, T> key)

Java query builder: null/notNull && FP

Fix TestEntityProperties types and all properties field.

- Also populate simpleLong property in Query test.

Support additional query conditions.

Do not validate values for null/notNull operations.

Actually copy values for in op.

Add Float support to PropertyCondition greater/less ops.

- They support Double, so they should support Float as well.

rename WhereCondition to QueryCondition","Corrective"
"fix tests using DummyProperties","Adaptive"
"Add contains, starts/endsWith to Property class.

- Replacement for like() from greenDAO.","Adaptive"
"prep some PropertyConverter stuff to happen in C++","Adaptive"
"fix","Corrective"
"Generate converter info into Property Java class (0.9.1-SNAPSHOT)","Adaptive"
"make Properties available to BoxStore, prep native registration","Adaptive"
"fix JniPropertyConverter.javaClassName","Corrective"
"added testBigResultList","Adaptive"
"fix JavaDoc errors","Corrective"
"make property flags uint and type ushort","Adaptive"
"added idAssignable flag","Adaptive"
"Put @Id(assignable = true) on Order","Adaptive"
"Need to retain Entity annotation for ProGuard. #25

- With RetentionPolicy.SOURCE the annotation is already stripped by the compiler, before ProGuard gets a chance to transform the byte code. So set at least RetentionPolicy.CLASS.","Corrective"
"added refId to @Entity and @Property","Adaptive"
"add refId and id to model","Adaptive"
"added id and refId to ModelBuilder","Adaptive"
"ignore tests with size != modulo 4","Adaptive"
"add indexId to model","Adaptive"
"consider ids in generator","Other"
"fixes for model IDs","Corrective"
"add lastEntityId and lastIndexId to model","Adaptive"
"lastEntityId lastIndexId in model builder, etc","Adaptive"
"lastEntityId lastIndexId in generator, fix modelIndexId in ftl","Adaptive"
"RetentionPolicy.CLASS for a couple more annotations","Other"
"added lastPropertyId to model entity","Adaptive"
"added lastEntityId to model builder and ftl","Adaptive"
"generator fixes","Corrective"
"test adjustments for recent schema sync changes (ref IDs etc.)","Perfective"
"added OrderFlags","Adaptive"
"QueryOrder: support for null flags (first, last, zero)","Adaptive"
"removed NULLS_FIRST order flag, CASE_SENSITIVE replaces IGNORE_CASE_ASCII","Perfective"
"added order to QueryBuilder.java","Adaptive"
"improved JavaDoc on queries","Administrative"
"JNI call find without offset/limit if possible","Other"
"StringOrder for string query conditions","Adaptive"
"use collect400000 and collect430000 to consume non-primitive values first","Adaptive"
"collect002033 for FP intensive entities, added Char type to generator","Adaptive"
"collect004000 for primitives only","Adaptive"
"properties to begin with lower char in accordance to JPA2","Perfective"
"Store and verify id in generated Property","Adaptive"
"createMinMaxVisitor with type trades to compile with VS, connected new query aggregates to java, remove too but still throws","Corrective"
"Query.java: fix remove()","Perfective"
"add testFindKeysUnordered","Adaptive"
"return long for native QueryBuilder methods","Adaptive"
"basic setParameter for Java","Adaptive"
"Port stringOrderCollation to QueryBuilder.

- Though change signature to accept only new StringOrder constant instead of any SQLite collate string.

Support setParameter in daocompat, properly rebuild query.

- Support setParameter and undeprecate it.
- The ObjectBox query is now (re)built when creating a new query or resetting it (for a new thread). QueryBuilder now only records desired conditions and orders. Previously would simply re-use the same ObjectBox query object built by QueryBuilder, which would obviously not be re-set to initial values.

JNI/Java: setParameter for FP, between for FP

Support double values for setParameter.

- Also throw on unsupported parameter types.

Support double values for BETWEEN op.

- Add test.

add :tests:test-proguard","Adaptive"
"@Retention(RetentionPolicy.CLASS) for all","Other"
"make Query.setParameter return Query to make Query chainable","Perfective"
"0.9.3","Other"
"JNI for new Store and Tx methods (renewal etc.)","Adaptive"
"fix TransactionPerfTest","Corrective"
"preped Cursor.renew(tx) in Java","Adaptive"
"test for Cursor.renew(tx) in Java","Adaptive"
"runInReadTx","Adaptive"
"testRunInReadTx_putFails","Adaptive"
"recycle and renew box reader instead of sharing to avoid readers to hold on to their data","Perfective"
"added CrashReportLogger from Java side","Corrective"
"fix tests the expect an ex type","Adaptive"
"BoxStore check if it need to unpack native lib from classpath (Windows)","Other"
"Update flatbuffers to 03ee3db2408e477137c83195e0e18c26f9d2ab25","Perfective"
"add native lib unpack logic for linux","Adaptive"
"embedd flatbuffers as source to fix dependency issue","Corrective"
"minor","Other"
"check for android native lib","Other"
"relations: store target entity (WIP, not sure about using the name in the model)","Adaptive"
"rename PropertyType_Reference to PropertyType_Reference","Perfective"
"0.9.6-SNAPSHOT, VS updates, @Relation","Perfective"
"typo","Other"
"added DbDetachedException.java","Corrective"
"setting some years to 2017","Other"
"fix setting boxStore, to-one relations now work!","Corrective"
"some fixes for relation","Corrective"
"prepared getBacklinkEntities to resolve to-many relations","Corrective"
"fixes to make to-many relations work","Corrective"
"added Box.attach for entities not originating from DB","Adaptive"
"add Cursor.boxStoreForEntities etc.","Adaptive"
"ToOne: Sketching a replacement for length generation of to-one getters","Perfective"
"use cursorConstructorCache for Transaction","Adaptive"
"Box.getId, ReflectionCache","Adaptive"
"make Property.id public final","Perfective"
"prepare ToOne to be used in generated to-one getters etc.","Adaptive"
"various improvements to ToOne","Perfective"
"fixes to make ToOne work","Corrective"
"Copied entity annotation test to java-test","Perfective"
"0.9.7-SNAPSHOT","Other"
"rename to findIdsUnordered","Perfective"
"added some putTestEntity methods to AbstractObjectBoxTest, rename to TestEntity_.java","Adaptive"
"Query.findLazy() returns LazyList","Adaptive"
"renaming refID to uid on Java side","Perfective"
"more renaming refId to uid on C++ side","Perfective"
"some more renaming refID to uid on Java side","Perfective"
"add LazyListTest to FunctionalTestSuite.java, move QueryTest.java","Adaptive"
"use IdUid for in model for last*Ids, more UID checks, e.g. check incoming vs existing UIDs","Adaptive"
"add missing IdUid.java","Adaptive"
"switched IdUid to struct","Perfective"
"adjust Java part to IdUid model changes","Perfective"
"added indexUid to FlatProperty&Property, CURRENT_META_VERSION = 2, MODEL_VERSION = 2, extended Schema-Entity-Flat-Roundtrip to check property/index IDs&UIDs","Adaptive"
"Query: support for boolean and Date types","Adaptive"
"Java QueryBuilder.notIn","Adaptive"
"set versions to 0.9.7-2017-02-09","Perfective"
"using io.objectbox:objectbox-generator:0.9.7-RC, fixing generated stuff","Perfective"
"added ObjectClassListener on Java side","Adaptive"
"extended ObjectClassListenerTest","Adaptive"
"added BoxStore.removeObjectClassListener()","Adaptive"
"moved ModelUpdate, and ModelModifier away","Perfective"
"changed listeners to Multiset","Perfective"
"some docs for async transactions","Administrative"
"added close&finalize to Query","Adaptive"
"'Observer'name more en vogue these days...","Other"
"weak observers","Other"
"common thread pool, etc.","Adaptive"
"rename addObjectClassObserver to subscribe etc.","Perfective"
"added QueryObserver.java","Adaptive"
"AbstractObjectBoxTest: use IDs from TestEntity_","Adaptive"
"General observers","Other"
"Transformer test","Adaptive"
"Scheduler test","Adaptive"
"testTransformerWithScheduler","Adaptive"
"remove obsolete ObjectClassObserver.java and Subscription (android)","Perfective"
"Data prefix for Observer, Publisher, and Subscription classes","Other"
"SubscriptionBuilder: renamed subscribe() to observer(), JavaDocs; tests for ErrorObserver","Perfective"
"added basic JavaDocs for BoxStore, Box, SubscriptionBuilder","Administrative"
"Make ObjectClassPublisher.java use one thread for observer notifications","Perfective"
"updated javadoc for subscribing observers (threading)","Administrative"
"use generic Observer for Query","Adaptive"
"archived: Query observer with Transformer (not weak!)","Perfective"
"Revert 'archived: Query observer with Transformer (not weak!)'

This reverts commit a52e340acdbb0759da50d071733e418945e008a4.","Other"
"Query uses SubscriptionBuilder via QueryPublisher","Adaptive"
"testTranformer for Query","Adaptive"
"call onError also for Observer exceptions","Corrective"
"JavaDoc updates for Observer exceptions","Administrative"
"Added JavaDoc to Query","Administrative"
"renamed to DataTransformer.java, added JavaDoc","Perfective"
"introduced DelegatingObserver to unwrap observers during removal, fixes a observer leak with wrapped observers","Corrective"
"use DataPublisherUtils.removeObserverFromCopyOnWriteSet in QueryPublisher.java, too","Adaptive"
"fixing weak observers","Corrective"
"test tweek: allocating 16 MB chunks is faster than 64 & 128 (~0,3s instead of ~1s) and a bit faster than 8 and 32","Perfective"
"0.9.8-RC2: Query.publish()","Adaptive"
"SubscriptionBuilder.single()","Adaptive"
"QueryBuilder.or()","Adaptive"
"Query observers get results immediately with subscription","Adaptive"
"QueryBuilder.and()","Adaptive"
"improved state checks for Query","Perfective"
"SubscriptionBuilder.onlyChanges()","Adaptive"
"AndroidScheduler.java: static method instead of field, JavaDoc","Perfective"
"some notes on weak references and stale query observers","Administrative"
"0.9.8-RC5, testRelationToOneQuery, javaDocs","Adaptive"
"javadoc","Administrative"
"added testRunInReadTxAndThenPut (failing)","Adaptive"
"fix relation test for android","Corrective"
"added MultithreadedRelationTest.java","Adaptive"
"JniBasicsTest to identify ReferenceTable leak","Corrective"
"misc","Other"
"Query.forEach (FIXME: make public after runInReadTx is fixed)","Adaptive"
"testForEach","Adaptive"
"tx is null despite check in constructor in some tests (called by finalizer):
Null check avoids NPE in finalizer and seems to stabilize Android instrumentation perf tests.","Corrective"
"Cursor calls nativeDestroy now also when tx is closed","Perfective"
"make testTxGC() run finalizers to clean up dangling TXs to avoid them surving the store closing","Perfective"
"Transaction.java: WARN_FINALIZER debug flag to see finalizers in action","Corrective"
"AbstractObjectBoxTest.java: run finalizers to clean up before store closing","Perfective"
"close transactions in unit tests","Adaptive"
"debug finalizer warning for Cursor","Corrective"
"clean read-only cursor from box after read-only TX completes","Perfective"
"make Query.forEach public","Perfective"
"make handle package visible to avoid accessor creation","Perfective"
"V0.9.9","Other"
"api annotation changes for 0.9.10","Perfective"
"Query: remove private from native methods because they are typically accessed in an anonymous class, which requires the compiler to generate an access method","Perfective"
"remove getProperties call from QueryBuilder.java - does not seem to have an effect, but creates&releases a reader","Perfective"
"custom toString for Cursor.java and Transaction.java","Adaptive"
"Java: keep thread local reader after TX was committed, debugTransactions flag","Corrective"
"added IndexReaderRenewTest.java to verify today's changes","Adaptive"
"added IndexReaderRenewTest to FunctionalTestSuite.java","Adaptive"
"closeThreadResources() to free any cached resources tied to the calling thread (e.g. readers)","Adaptive"
"added ObjectBoxThreadPool.java to release thread local resources, etc","Adaptive"
"better error message for getBacklinkEntities (closes GitHub issue #41)","Corrective"
"Java version: 0.9.10-2017-04-13","Other"
"ModelRelation generation","Adaptive"
"ToOne: remove SOURCE generics, add optional targetId property, added ToOneTest.java","Adaptive"
"added AbstractRelationTest, used now by ToOneTest","Adaptive"
"Use IdSetter instead of dummy Cursor","Perfective"
"Use IdGetter instead of dummy Cursor","Perfective"
"de-activate Customer.java and Order.java in test","Perfective"
"updates to generated test classes","Perfective"
"sketching CursorFactory","Adaptive"
"test fixes","Corrective"
"fixed a couple of warnings","Corrective"
"started to use JSR-305 annotations","Adaptive"
"more JSR-305 annotations","Adaptive"
"updated flatbuffers to 340d1a3447cf821924aaaeefa5e6aef0fcdbf0c0","Perfective"
"multiple refactorings: Cursor creation via factory, added RelationInfo, extended Properties class to be single source for entity info","Perfective"
"renamed Properties to EntityInfo","Perfective"
"regenerated test artifacts with current version","Adaptive"
"refactoring: RelationInfo.java used EntityInfo","Perfective"
"ToOne puts via cursor if necessary","Other"
"ToOne fixes: isResolved(), cached target/id after put","Corrective"
"ToOne: flag to avoid calls to {@link #getTargetId()}, which may involve expensive reflection","Other"
"updated cursor gen","Perfective"
"updated cursor gen","Perfective"
"shorter @Generated (no more "hash = ")","Perfective"
"removed @JoinEntity which does not make sense for ObjectBox","Perfective"
"JavaDoc covering special @Uid values","Administrative"
"@NameInDb replaces attribute in @Property and @Entity","Perfective"
"minor docs, todos, v","Administrative"
"fix testCloseThreadResources by using getReader()","Corrective"
"Move loadLibrary into NativeLibraryLoader to make BoxStore mockable","Perfective"
"minor, added javadocs","Administrative"
"added EntityInfo.getEntityId()","Adaptive"
"first compilable ToMany","Adaptive"
"improved ToMany.checkGetEntities()","Perfective"
"use ToMany in tests","Adaptive"
"started ToMany.add methods, experimental ListFactory.java","Adaptive"
"lazy ListFactory init","Adaptive"
"ToMany puts added target entities","Adaptive"
"ensure order of added entities to ToMany","Perfective"
"internalRequiresPutTarget determines entities to put (avoids getting cursors if not required)","Perfective"
"remove with remove from DB","Perfective"
"ToMany.removeFromTargetBox flag","Adaptive"
"ToMany: add() removes entities from remove tracking, tests for remove","Adaptive"
"ToMany.syncToTargetBox()","Adaptive"
"ToMany.sortById()","Adaptive"
"ToMany: clear all on reset(), JavaDoc","Perfective"
"JavaDocs","Administrative"
"added @Backlink","Adaptive"
"for non-Android OS, prefer System.load over System.loadLibrary","Perfective"
"throw to test sth in Jenkins","Corrective"
"temp code to debug Jenkins","Corrective"
"revert debug code","Corrective"
"FunctionalTestSuite.java: Duplicate for gradle","Adaptive"
"added flags for entity meta data","Adaptive"
"prep Java test for non-arg constructor usage","Adaptive"
"add NonArgConstructorTest to suite","Adaptive"
"add NonArgConstructorTest to suite (Gradle)","Adaptive"
"test nonArg constructor with more types","Adaptive"
"API: @Entity(useNoArgConstructor=...)","Other"
"minor JavaDoc","Administrative"
"start of objectbox-kotlin","Administrative"
"move kotlin extentions into kotlin sub package","Perfective"
"make ToOne and ToMany serializable","Perfective"
"shutdown thread pool when closing BoxStore","Perfective"
"minor: suppress warning","Corrective"
"dump thread stacks if pool does not terminate promptly","Corrective"
"testCloseBulk to check on Linux","Adaptive"
"testCloseBulk to check on Linux, now with 2 TXs","Perfective"
"removed testCloseBulk again; no flaws discovered","Perfective"
"allow setting max readers C++ & JNI","Perfective"
"simplify test","Perfective"
"javadocs for BoxStoreBuilder","Administrative"
"minor","Other"
"BoxStoreBuilder.maxReaders, DbMaxReadersExceededException.java","Corrective"
"fix: DbMaxReadersExceededException needs error code constructor","Corrective"
"Jenkinsfile: enable extensive-tests for Java tests","Adaptive"
"property: added virtual flag and virtualTarget","Adaptive"
"minor improvements for ToOne","Perfective"
"ModelBuilder: allow passing virtualTarget","Adaptive"
"ModelBuilder: allow passing virtualTarget 2","Adaptive"
"temp debug log for setResolvedTarget","Corrective"
"debugRelations flag","Corrective"
"prevent two BoxStores from being opened for the same directory","Corrective"
"better to explicitly close store before building new one","Perfective"
"added Box.get(Iterable) and .getMap(Iterable)","Adaptive"
"updated CHANGELOG.md, typo","Administrative"
"add Box.get(long[] ids)","Adaptive"
"Replaced some greenrobot references with ObjectBox","Perfective"
"testCallInTxAsync_Error","Adaptive"
"testRunInTx_PutAfterRemoveAll","Adaptive"
"inValues method alias for Kotlin","Adaptive"
"model support for Relation","Adaptive"
"prep RelationInfo for relationId","Adaptive"
"some prep ToMany.java for standalone relations","Adaptive"
"some more prep for ToMany.java for standalone relations","Adaptive"
"prep standalone relation modifications","Adaptive"
"prep standalone relation loading","Adaptive"
"ModelBuilder.java: add relations","Adaptive"
"relation fixes","Corrective"
"fix EntityBuilder.relation model building","Corrective"
"adjustments to getting relations (Java)","Perfective"
"ToMany.java: Do not use Iterator with remove because not all List Types support it (e.g. CopyOnWriteArrayList)","Other"
"added stand alone relation tests","Adaptive"
"API_ added @TargetIdProperty, deprecated old annotations","Adaptive"
"testToOneBulk and testToManyBulk","Adaptive"
"some renames, added ToManyGetter","Perfective"
"use To[Many|One]Getters in RelationInfo.java","Adaptive"
"make ToManyGetter return List","Perfective"
"added store.callInReadTx()","Adaptive"
"Query: eager relations","Adaptive"
"JavaDocs for QueryBuilder.eager(...)","Administrative"
"change RelationInfo signature","Perfective"
"BreakForEach for Query.forEach()","Adaptive"
"added query filtering","Adaptive"
"add javadoc-style","Administrative"
"add .gitignore","Administrative"
"add gradle files","Administrative"
"add Jenkinsfile","Administrative"
"add gradle files for tests","Adaptive"
"for linux64, add native dependency","Adaptive"
"fix version for native dependency","Corrective"
"fix","Corrective"
"fix copyright headers","Perfective"
"Java V1.0.0-2017-09-02","Other"
"enable source artifacts","Other"
"added LICENSE.txt","Administrative"
"first README.txt","Administrative"
"V1.0.0","Other"
"added GitHub issue template","Adaptive"
"1.0.1-SNAPSHOT","Other"
"relation constructor should fail fast for null values to track down non-standard initialization (e.g. JSON libs)","Other"
"improved github issue template","Perfective"
"BoxStore.java: V1.0.1-2017-09-10","Other"
"dropAllData() is not implemented on native side; remove public for now","Perfective"
"ToMany: Set an comparator to define the order of entities","Adaptive"
"V1.0.1","Other"
"adding logo to README.md","Administrative"
"Jenkinsfile: adding upstreamProjects","Adaptive"
"1.0.2-SNAPSHOT","Other"
"Jenkinsfile: adding upstrea threshold","Adaptive"
"Jenkinsfile: oops, variable sneaked in","Other"
"Query: sort using Comparator","Adaptive"
"add data browser methods to BoxStore.java","Adaptive"
"added hasA and hasAll to ToMany","Adaptive"
"startObjectBrowser() trying port range","Adaptive"
"NPE fix","Corrective"
"1.1.0-RC","Other"
"1.1.0","Other"
"update README.md for 1.1.0","Administrative"
"1.2.0-SNAPSHOT","Other"
"ToMany: added indexOfId() and getById()","Adaptive"
"added ToMany.removeById()","Adaptive"
"added testBuildTwice","Adaptive"
"extracted getAndroidFilesDir","Perfective"
"getAndroidFilesDir: workaround for race condition in Android before 4.4","Corrective"
"getAndroidFilesDir: fail fast if dir does not exist, etc.","Corrective"
"1.2.0-RC","Other"
"Put 1.2.0-RC in README.md","Administrative"
"Added PropertyFlags.INDEX_HASH","Adaptive"
"Cursor: remove property name based find methods","Perfective"
"Box: remove find methods except with Property param, adjust tests","Perfective"
"using flatbuffers-java:1.7.2 from maven repo, removing embedded sources","Perfective"
"Help people with floating point equality","Other"
"DataSubscriptionList: add clears canceled state, java docs","Adaptive"
"deprecated Cursor.lookupKeyUsingIndex","Perfective"
"Gradle: Drop FunctionalTestSuite, instead add main source set to tests.","Perfective"
"Drop unused Android Gradle plugin dependency.","Perfective"
"QueryTest: expand testBuildTwice to call other builder methods.","Perfective"
"added observer method with DataSubscriptionList param","Adaptive"
"Revert 'Gradle: Drop FunctionalTestSuite, instead add main source set to tests.'

This reverts commit 38e8214","Other"
"minor","Other"
"QueryBuilder: always verify handle before using it","Adaptive"
"Gradle 4.3","Other"
"1.2.0","Other"
"1.2.0 last minute change: passing DataSubscriptionList","Perfective"
"1.2.0 last minute change: updating BoxStore version","Perfective"
"Update README.md to 1.2.0","Administrative"
"1.3.0-SNAPSHOT","Other"
"1.2.1-SNAPSHOT","Other"
"kotlin_version = '1.1.51'","Other"
"pass canonical instead of absolute path","Perfective"
"BoxStore.getVersion(): "1.2.1-2017-11-09"","Adaptive"
"move OrderFlags into query package","Adaptive"
"Add generated DebugFlags","Adaptive"
"LOG_TRANSACTIONS_READ and LOG_TRANSACTIONS_WRITE","Adaptive"
"use new debug flags","Adaptive"
"fix return type of nativeSetDebugFlags","Corrective"
"1.2.1","Other"
"only apply debugFlags if != 0","Corrective"
"fix previous commit","Corrective"
"Update README.md to 1.2.1","Administrative"
"1.3.0-SNAPSHOT (again)","Other"
"1.2.2-beta, kotlin_version = '1.1.60'","Other"
"1.3.0-SNAPSHOT (again)","Other"
"Setting BoxStore version to 1.2.2-2017-11-17","Perfective"
"increased default max db size to 1 GB DEFAULT_MAX_DB_SIZE_KBYTE","Perfective"
"Jenkinsfile: dedicated init stage, archive hs_err_pid files if any","Perfective"
"Jenkinsfile: trigger every 20 minutes at night (0:00 - 6:00)","Perfective"
"+x gradlew","Other"
"Jenkinsfile: LD_PRELOAD=$ASAN_LIB_SO","Adaptive"
"make Transaction.closed flag volatile because finalizer thread may interfere with 'one thread, one TX' rule","Perfective"
"build.gradle: enable test logging","Adaptive"
"added test-with-asan.sh","Adaptive"
"added test-with-asan.sh: allow arguments to be forwarded to gradle","Adaptive"
"Jenkinsfile: use test-with-asan.sh","Other"
"set BoxStore version to 1.2.2-2017-11-21","Perfective"
"1.2.2-RC","Other"
"Jenkinsfile: disable testing with asan for now","Perfective"
"Jenkinsfile: disable test collection temporarily","Perfective"
"back to 1.3.0-SNAPSHOT","Perfective"
"reworked deleteAllFiles: fail fast, throw NPE for null param, safer concurrency
added JavaDocs","Corrective"
"added link to BoxStore.diagnose() for DbMaxReadersExceededException","Adaptive"
"new static deleteAllFiles methods","Adaptive"
"tests for deleteAllFiles","Adaptive"
"enable tests again","Perfective"
"test-with-asan.sh: use Gradle daemon on Jenkins","Adaptive"
"Cursor & Transaction: always log error if not closed","Corrective"
"Transaction finalizer should only complain about non-active transactions","Perfective"
"enableCreationStackTracking() for tests","Adaptive"
"test fixes for transaction not cleaned up","Corrective"
"Ignore testTxGC: Tests robustness in invalid usage scenarios with lots of errors raised and resources leaked. Only run this test manually from time to time, but spare regular test runs from those errors.","Corrective"
"By default only complain about write cursors not being closed","Perfective"
"kotlin_version = '1.1.61'","Other"
"1.3.0","Other"
"1.3.0-SNAPSHOT","Other"
"enforce Cursor.renew() to be tied to the same TX","Perfective"
"BoxStore version 1.3.0-2017-11-27","Other"
"JavaDocs for Transaction.reset","Administrative"
"remove tx param from Cursor.nativeRenew","Perfective"
"fix TX leak in testCommitReadTxException()","Corrective"
"1.3.0","Other"
"1.3.1-SNAPSHOT","Other"
"added DbShutdownException","Adaptive"
"Query and QueryBuilder do not use static native methods anymore","Perfective"
"1.3.1","Other"
"BoxStore 1.3.1-2017-11-29","Other"
"README.md: 1.3.1","Administrative"
"1.3.2-SNAPSHOT","Other"
"added callInReadTxWithRetry","Adaptive"
"experimental query retry configuration","Adaptive"
"1.3.2","Other"
"added testSumDoubleOfFloats","Adaptive"
"1.3.2 for README.md","Administrative"
"JavaDocs, minor","Administrative"
"1.3.3-SNAPSHOT","Other"
"renamed to queryAttempts, etc., JavaDocs","Perfective"
"minor","Other"
"1.3.3","Other"
"added DebugFlags.LOG_QUERY_PARAMETERS","Adaptive"
"QueryTest: enable param debug logging","Adaptive"
"1.3.4-SNAPSHOT","Other"
"Add @BaseEntity annotation for entity super classes.","Adaptive"
"1.4.0-SNAPSHOT","Other"
"Merge branch 'dev' into entity-inheritance","Other"
"README.md: 1.3.3","Administrative"
"Merge branch 'master' into dev","Other"
"added test for Date query","Adaptive"
"Added ToOne.equals and .hashCode","Adaptive"
"1.3.4","Other"
"README.md: 1.3.4","Administrative"
"1.4.0-SNAPSHOT","Other"
"kotlin_version = '1.2.0'","Other"
"BoxStore version 1.3.5-2017-12-08","Other"
"Query: first version of finding strings","Adaptive"
"added testFindStrings_wrongPropertyType","Adaptive"
"introduced 'upload-to-repo' stage for dev & master branch, etc.","Adaptive"
"Jenkinsfile: archive FindBugs report","Perfective"
"testing what happens if Jenkins does not use a Gradle daemon","Adaptive"
"Merge branch 'dev' into entity-inheritance","Other"
"BoxStore version "1.4.0-2017-12-10"","Other"
"JavaDocs for findStrings* methods","Administrative"
"remove @Generated from test entity","Perfective"
"offload property query methods into new class PropertyQuery","Perfective"
"fix test compilation","Corrective"
"PropertyQuery: single findStrings() method with config methods distinct() etc.","Adaptive"
"PropertyQuery: JavaDocs, check string type","Administrative"
"added missing copyright headers","Perfective"
"findLongs()","Adaptive"
"findInts() and findBytes()","Adaptive"
"Merge branch 'entity-inheritance' into dev","Other"
"BoxStore version 1.4.0-2017-12-18","Other"
"add QueryPropertiesTest to FunctionalTestSuite","Adaptive"
"Jenkinsfile: restrict nightly cron to 1:00 - 5:00","Perfective"
"PropertyQuery: added findShorts, findChars, findFloats, findDoubles","Adaptive"
"added Query.cursorHandle()","Adaptive"
"PropertyQuery support for null values","Adaptive"
"rename to PropertyQueryTest","Perfective"