message,label
"package rename to io.objectbox","Refactoring"
"move java tests to tests sub dir","Refactoring"
"minor improvements to flatbuffers model, move java model classes with cp and sed","Refactoring"
"fix imports for new model package","Setup"
"more flexible BoxStoreBuilder.java and android Context support","Database"
"defaultStore in BoxStoreBuilder.java","Database"
"move defaultStore in BoxStore.java","Refactoring"
"collect entity classes using builder","Database"
"renamed some VS stuff to ObjectBox, removed .gitignore for tests","Refactoring"
"load lib objectbox","Setup"
"minor","Other"
"added property flag NON_PRIMITIVE_TYPE

added Properties class

give Cursors a Properties instance

verify entity is know before returning a box

prepared 2nd entity TestEntityMinimal.java for unit testing

sharedReadTx to make txs across boxes work

fix some test deps","Feature Addition"
"Box: some JavaDocs, shortcut for null or empty collections","Documentation"
"prep daocompat for upload","Setup"
"find scalars using a list","Feature Addition"
"Java: find string returns a list","Feature Addition"
"added find()s to Box","Feature Addition"
"various, e.g. running bulk perf test from example app","Testing"
"perf test: added fixed byte array with length 6","Testing"
"find string using property id","Feature Addition"
"add version","Setup"
"getting all entities in native, crashes at the moment (local reference table overflow (max=512)) and is slower on Desktop when deleting local refs

Java_io_objectbox_Cursor_nativePutSimpleEntity

Basic copy of query and builder API.

Initial query implementation using objectbox find.

Use find method overloads based on value type.

Java_io_objectbox_Cursor_nativeFindScalarPropertyId","Database"
"testUnalignedMemoryAccess","Testing"
"CursorBytesTest.java: Sizes must be multiple of 4 (currently not enforced)","Testing"
"fix some java tests: pad bytes to length 4","Testing"
"moved objectbox-api to objectbox-java-api","Refactoring"
"prepared Query&Builder on the Java side","Database"
"fixes to build Query in Java","Bug Fix"
"added @Temporary to API","Feature Addition"
"init Property IDs (for query builder)","Database"
"fixes to make Java Query work","Bug Fix"
"count for Java Query","Database"
"!=, >, < for scalars","Feature Addition"
"== and != for String","Feature Addition"
"contains, startsWith, and endsWith for String","Feature Addition"
"java find with offset and limit","Database"
"in and betwwen for Java QueryBuilder (FIXME DbException: invalid unordered_map<K, T> key)

Java query builder: null/notNull && FP

Fix TestEntityProperties types and all properties field.

- Also populate simpleLong property in Query test.

Support additional query conditions.

Do not validate values for null/notNull operations.

Actually copy values for in op.

Add Float support to PropertyCondition greater/less ops.

- They support Double, so they should support Float as well.

rename WhereCondition to QueryCondition","Database"
"fix tests using DummyProperties","Testing"
"Add contains, starts/endsWith to Property class.

- Replacement for like() from greenDAO.","Feature Addition"
"prep some PropertyConverter stuff to happen in C++","Feature Addition"
"fix","Bug Fix"
"Generate converter info into Property Java class (0.9.1-SNAPSHOT)","Feature Addition"
"make Properties available to BoxStore, prep native registration","Feature Addition"
"fix JniPropertyConverter.javaClassName","Bug Fix"
"added testBigResultList","Testing"
"fix JavaDoc errors","Bug Fix"
"make property flags uint and type ushort","Feature Addition"
"added idAssignable flag","Feature Addition"
"Put @Id(assignable = true) on Order","Feature Addition"
"Need to retain Entity annotation for ProGuard. #25

- With RetentionPolicy.SOURCE the annotation is already stripped by the compiler, before ProGuard gets a chance to transform the byte code. So set at least RetentionPolicy.CLASS.","Bug Fix"
"added refId to @Entity and @Property","Database"
"add refId and id to model","Database"
"added id and refId to ModelBuilder","Database"
"ignore tests with size != modulo 4","Testing"
"add indexId to model","Database"
"consider ids in generator","Other"
"fixes for model IDs","Bug Fix"
"add lastEntityId and lastIndexId to model","Database"
"lastEntityId lastIndexId in model builder, etc","Database"
"lastEntityId lastIndexId in generator, fix modelIndexId in ftl","Database"
"RetentionPolicy.CLASS for a couple more annotations","Feature Addition"
"added lastPropertyId to model entity","Database"
"added lastEntityId to model builder and ftl","Database"
"generator fixes","Bug Fix"
"test adjustments for recent schema sync changes (ref IDs etc.)","Testing"
"added OrderFlags","Feature Addition"
"QueryOrder: support for null flags (first, last, zero)","Database"
"removed NULLS_FIRST order flag, CASE_SENSITIVE replaces IGNORE_CASE_ASCII","Feature Addition"
"added order to QueryBuilder.java","Database"
"improved JavaDoc on queries","Documentation"
"JNI call find without offset/limit if possible","Other"
"StringOrder for string query conditions","Database"
"use collect400000 and collect430000 to consume non-primitive values first","Feature Addition"
"collect002033 for FP intensive entities, added Char type to generator","Feature Addition"
"collect004000 for primitives only","Feature Addition"
"properties to begin with lower char in accordance to JPA2","Feature Addition"
"Store and verify id in generated Property","Database"
"createMinMaxVisitor with type trades to compile with VS, connected new query aggregates to java, remove too but still throws","Database"
"Query.java: fix remove()","Database"
"add testFindKeysUnordered","Testing"
"return long for native QueryBuilder methods","Database"
"basic setParameter for Java","Feature Addition"
"Port stringOrderCollation to QueryBuilder.

- Though change signature to accept only new StringOrder constant instead of any SQLite collate string.

Support setParameter in daocompat, properly rebuild query.

- Support setParameter and undeprecate it.
- The ObjectBox query is now (re)built when creating a new query or resetting it (for a new thread). QueryBuilder now only records desired conditions and orders. Previously would simply re-use the same ObjectBox query object built by QueryBuilder, which would obviously not be re-set to initial values.

JNI/Java: setParameter for FP, between for FP

Support double values for setParameter.

- Also throw on unsupported parameter types.

Support double values for BETWEEN op.

- Add test.

add :tests:test-proguard","Database"
"@Retention(RetentionPolicy.CLASS) for all","Refactoring"
"make Query.setParameter return Query to make Query chainable","Database"
"0.9.3","Other"
"JNI for new Store and Tx methods (renewal etc.)","Feature Addition"
"fix TransactionPerfTest","Bug Fix"
"preped Cursor.renew(tx) in Java","Feature Addition"
"test for Cursor.renew(tx) in Java","Testing"
"runInReadTx","Feature Addition"
"testRunInReadTx_putFails","Testing"
"recycle and renew box reader instead of sharing to avoid readers to hold on to their data","Feature Addition"
"added CrashReportLogger from Java side","Feature Addition"
"fix tests the expect an ex type","Testing"
"BoxStore check if it need to unpack native lib from classpath (Windows)","Setup"
"Update flatbuffers to 03ee3db2408e477137c83195e0e18c26f9d2ab25","Refactoring"
"add native lib unpack logic for linux","Setup"
"embedd flatbuffers as source to fix dependency issue","Bug Fix"
"minor","Other"
"check for android native lib","Setup"
"relations: store target entity (WIP, not sure about using the name in the model)","Database"
"rename PropertyType_Reference to PropertyType_Reference","Refactoring"
"0.9.6-SNAPSHOT, VS updates, @Relation","Setup"
"typo","Refactoring"
"added DbDetachedException.java","Feature Addition"
"setting some years to 2017","Refactoring"
"fix setting boxStore, to-one relations now work!","Bug Fix"
"some fixes for relation","Bug Fix"
"prepared getBacklinkEntities to resolve to-many relations","Database"
"fixes to make to-many relations work","Bug Fix"
"added Box.attach for entities not originating from DB","Database"
"add Cursor.boxStoreForEntities etc.","Feature Addition"
"ToOne: Sketching a replacement for length generation of to-one getters","Feature Addition"
"use cursorConstructorCache for Transaction","Feature Addition"
"Box.getId, ReflectionCache","Feature Addition"
"make Property.id public final","Database"
"prepare ToOne to be used in generated to-one getters etc.","Feature Addition"
"various improvements to ToOne","Refactoring"
"fixes to make ToOne work","Bug Fix"
"Copied entity annotation test to java-test","Testing"
"0.9.7-SNAPSHOT","Other"
"rename to findIdsUnordered","Refactoring"
"added some putTestEntity methods to AbstractObjectBoxTest, rename to TestEntity_.java","Testing"
"Query.findLazy() returns LazyList","Feature Addition"
"renaming refID to uid on Java side","Refactoring"
"more renaming refId to uid on C++ side","Refactoring"
"some more renaming refID to uid on Java side","Refactoring"
"add LazyListTest to FunctionalTestSuite.java, move QueryTest.java","Refactoring"
"use IdUid for in model for last*Ids, more UID checks, e.g. check incoming vs existing UIDs","Feature Addition"
"add missing IdUid.java","Feature Addition"
"switched IdUid to struct","Refactoring"
"adjust Java part to IdUid model changes","Refactoring"
"added indexUid to FlatProperty&Property, CURRENT_META_VERSION = 2, MODEL_VERSION = 2, extended Schema-Entity-Flat-Roundtrip to check property/index IDs&UIDs","Feature Addition"
"Query: support for boolean and Date types","Feature Addition"
"Java QueryBuilder.notIn","Feature Addition"
"set versions to 0.9.7-2017-02-09","Setup"
"using io.objectbox:objectbox-generator:0.9.7-RC, fixing generated stuff","Other"
"added ObjectClassListener on Java side","Feature Addition"
"extended ObjectClassListenerTest","Other"
"added BoxStore.removeObjectClassListener()","Feature Addition"
"moved ModelUpdate, and ModelModifier away","Refactoring"
"changed listeners to Multiset","Refactoring"
"some docs for async transactions","Documentation"
"added close&finalize to Query","Database"
"'Observer'name more en vogue these days...","Other"
"weak observers","Other"
"common thread pool, etc.","Feature Addition"
"rename addObjectClassObserver to subscribe etc.","Refactoring"
"added QueryObserver.java","Feature Addition"
"AbstractObjectBoxTest: use IDs from TestEntity_","Testing"
"General observers","Other"
"Transformer test","Testing"
"Scheduler test","Testing"
"testTransformerWithScheduler","Testing"
"remove obsolete ObjectClassObserver.java and Subscription (android)","Refactoring"
"Data prefix for Observer, Publisher, and Subscription classes","Other"
"SubscriptionBuilder: renamed subscribe() to observer(), JavaDocs; tests for ErrorObserver","Documentation"
"added basic JavaDocs for BoxStore, Box, SubscriptionBuilder","Documentation"
"Make ObjectClassPublisher.java use one thread for observer notifications","Feature Addition"
"updated javadoc for subscribing observers (threading)","Documentation"
"use generic Observer for Query","Database"
"archived: Query observer with Transformer (not weak!)","Other"
"Revert 'archived: Query observer with Transformer (not weak!)'

This reverts commit a52e340acdbb0759da50d071733e418945e008a4.","Git Operation"
"Query uses SubscriptionBuilder via QueryPublisher","Database"
"testTranformer for Query","Database"
"call onError also for Observer exceptions","Bug Fix"
"JavaDoc updates for Observer exceptions","Documentation"
"Added JavaDoc to Query","Documentation"
"renamed to DataTransformer.java, added JavaDoc","Documentation"
"introduced DelegatingObserver to unwrap observers during removal, fixes a observer leak with wrapped observers","Bug Fix"
"use DataPublisherUtils.removeObserverFromCopyOnWriteSet in QueryPublisher.java, too","Other"
"fixing weak observers","Bug Fix"
"test tweek: allocating 16 MB chunks is faster than 64 & 128 (~0,3s instead of ~1s) and a bit faster than 8 and 32","Testing"
"0.9.8-RC2: Query.publish()","Feature Addition"
"SubscriptionBuilder.single()","Feature Addition"
"QueryBuilder.or()","Feature Addition"
"Query observers get results immediately with subscription","Feature Addition"
"QueryBuilder.and()","Feature Addition"
"improved state checks for Query","Database"
"SubscriptionBuilder.onlyChanges()","Feature Addition"
"AndroidScheduler.java: static method instead of field, JavaDoc","Documentation"
"some notes on weak references and stale query observers","Documentation"
"0.9.8-RC5, testRelationToOneQuery, javaDocs","Documentation"
"javadoc","Documentation"
"added testRunInReadTxAndThenPut (failing)","Testing"
"fix relation test for android","Testing"
"added MultithreadedRelationTest.java","Testing"
"JniBasicsTest to identify ReferenceTable leak","Testing"
"misc","Other"
"Query.forEach (FIXME: make public after runInReadTx is fixed)","Bug Fix"
"testForEach","Testing"
"tx is null despite check in constructor in some tests (called by finalizer):
Null check avoids NPE in finalizer and seems to stabilize Android instrumentation perf tests.","Testing"
"Cursor calls nativeDestroy now also when tx is closed","Feature Addition"
"make testTxGC() run finalizers to clean up dangling TXs to avoid them surving the store closing","Other"
"Transaction.java: WARN_FINALIZER debug flag to see finalizers in action","Bug Fix"
"AbstractObjectBoxTest.java: run finalizers to clean up before store closing","Testing"
"close transactions in unit tests","Testing"
"debug finalizer warning for Cursor","Bug Fix"
"clean read-only cursor from box after read-only TX completes","Bug Fix"
"make Query.forEach public","Refactoring"
"make handle package visible to avoid accessor creation","Feature Addition"
"V0.9.9","Other"
"api annotation changes for 0.9.10","Other"
"Query: remove private from native methods because they are typically accessed in an anonymous class, which requires the compiler to generate an access method","Feature Addition"
"remove getProperties call from QueryBuilder.java - does not seem to have an effect, but creates&releases a reader","Refactoring"
"custom toString for Cursor.java and Transaction.java","Feature Addition"
"Java: keep thread local reader after TX was committed, debugTransactions flag","Feature Addition"
"added IndexReaderRenewTest.java to verify today's changes","Testing"
"added IndexReaderRenewTest to FunctionalTestSuite.java","Testing"
"closeThreadResources() to free any cached resources tied to the calling thread (e.g. readers)","Feature Addition"
"added ObjectBoxThreadPool.java to release thread local resources, etc","Feature Addition"
"better error message for getBacklinkEntities (closes GitHub issue #41)","Feature Addition"
"Java version: 0.9.10-2017-04-13","Other"
"ModelRelation generation","Database"
"ToOne: remove SOURCE generics, add optional targetId property, added ToOneTest.java","Database"
"added AbstractRelationTest, used now by ToOneTest","Testing"
"Use IdSetter instead of dummy Cursor","Refactoring"
"Use IdGetter instead of dummy Cursor","Refactoring"
"de-activate Customer.java and Order.java in test","Testing"
"updates to generated test classes","Testing"
"sketching CursorFactory","Feature Addition"
"test fixes","Testing"
"fixed a couple of warnings","Bug Fix"
"started to use JSR-305 annotations","Documentation"
"more JSR-305 annotations","Documentation"
"updated flatbuffers to 340d1a3447cf821924aaaeefa5e6aef0fcdbf0c0","Git Operation"
"multiple refactorings: Cursor creation via factory, added RelationInfo, extended Properties class to be single source for entity info","Refactoring"
"renamed Properties to EntityInfo","Refactoring"
"regenerated test artifacts with current version","Testing"
"refactoring: RelationInfo.java used EntityInfo","Refactoring"
"ToOne puts via cursor if necessary","Other"
"ToOne fixes: isResolved(), cached target/id after put","Bug Fix"
"ToOne: flag to avoid calls to {@link #getTargetId()}, which may involve expensive reflection","Feature Addition"
"updated cursor gen","Refactoring"
"updated cursor gen","Refactoring"
"shorter @Generated (no more "hash = ")","Refactoring"
"removed @JoinEntity which does not make sense for ObjectBox","Refactoring"
"JavaDoc covering special @Uid values","Documentation"
"@NameInDb replaces attribute in @Property and @Entity","Refactoring"
"minor docs, todos, v","Documentation"
"fix testCloseThreadResources by using getReader()","Testing"
"Move loadLibrary into NativeLibraryLoader to make BoxStore mockable","Refactoring"
"minor, added javadocs","Documentation"
"added EntityInfo.getEntityId()","Feature Addition"
"first compilable ToMany","Database"
"improved ToMany.checkGetEntities()","Feature Addition"
"use ToMany in tests","Testing"
"started ToMany.add methods, experimental ListFactory.java","Feature Addition"
"lazy ListFactory init","Feature Addition"
"ToMany puts added target entities","Database"
"ensure order of added entities to ToMany","Database"
"internalRequiresPutTarget determines entities to put (avoids getting cursors if not required)","Database"
"remove with remove from DB","Refactoring"
"ToMany.removeFromTargetBox flag","Feature Addition"
"ToMany: add() removes entities from remove tracking, tests for remove","Feature Addition"
"ToMany.syncToTargetBox()","Feature Addition"
"ToMany.sortById()","Feature Addition"
"ToMany: clear all on reset(), JavaDoc","Documentation"
"JavaDocs","Documentation"
"added @Backlink","Feature Addition"
"for non-Android OS, prefer System.load over System.loadLibrary","Setup"
"throw to test sth in Jenkins","Setup"
"temp code to debug Jenkins","Bug Fix"
"revert debug code","Bug Fix"
"FunctionalTestSuite.java: Duplicate for gradle","Testing"
"added flags for entity meta data","Feature Addition"
"prep Java test for non-arg constructor usage","Testing"
"add NonArgConstructorTest to suite","Feature Addition"
"add NonArgConstructorTest to suite (Gradle)","Feature Addition"
"test nonArg constructor with more types","Testing"
"API: @Entity(useNoArgConstructor=...)","Feature Addition"
"minor JavaDoc","Documentation"
"start of objectbox-kotlin","Setup"
"move kotlin extentions into kotlin sub package","Refactoring"
"make ToOne and ToMany serializable","Feature Addition"
"shutdown thread pool when closing BoxStore","Feature Addition"
"minor: suppress warning","Other"
"dump thread stacks if pool does not terminate promptly","Feature Addition"
"testCloseBulk to check on Linux","Testing"
"testCloseBulk to check on Linux, now with 2 TXs","Testing"
"removed testCloseBulk again; no flaws discovered","Refactoring"
"allow setting max readers C++ & JNI","Other"
"simplify test","Testing"
"javadocs for BoxStoreBuilder","Documentation"
"minor","Other"
"BoxStoreBuilder.maxReaders, DbMaxReadersExceededException.java","Feature Addition"
"fix: DbMaxReadersExceededException needs error code constructor","Bug Fix"
"Jenkinsfile: enable extensive-tests for Java tests","Testing"
"property: added virtual flag and virtualTarget","Feature Addition"
"minor improvements for ToOne","Refactoring"
"ModelBuilder: allow passing virtualTarget","Feature Addition"
"ModelBuilder: allow passing virtualTarget 2","Feature Addition"
"temp debug log for setResolvedTarget","Bug Fix"
"debugRelations flag","Bug Fix"
"prevent two BoxStores from being opened for the same directory","Bug Fix"
"better to explicitly close store before building new one","Feature Addition"
"added Box.get(Iterable) and .getMap(Iterable)","Feature Addition"
"updated CHANGELOG.md, typo","Refactoring"
"add Box.get(long[] ids)","Feature Addition"
"Replaced some greenrobot references with ObjectBox","Refactoring"
"testCallInTxAsync_Error","Testing"
"testRunInTx_PutAfterRemoveAll","Testing"
"inValues method alias for Kotlin","Feature Addition"
"model support for Relation","Database"
"prep RelationInfo for relationId","Database"
"some prep ToMany.java for standalone relations","Database"
"some more prep for ToMany.java for standalone relations","Database"
"prep standalone relation modifications","Database"
"prep standalone relation loading","Database"
"ModelBuilder.java: add relations","Database"
"relation fixes","Database"
"fix EntityBuilder.relation model building","Bug Fix"
"adjustments to getting relations (Java)","Database"
"ToMany.java: Do not use Iterator with remove because not all List Types support it (e.g. CopyOnWriteArrayList)","Bug Fix"
"added stand alone relation tests","Testing"
"API_ added @TargetIdProperty, deprecated old annotations","Documentation"
"testToOneBulk and testToManyBulk","Testing"
"some renames, added ToManyGetter","Refactoring"
"use To[Many|One]Getters in RelationInfo.java","Feature Addition"
"make ToManyGetter return List","Feature Addition"
"added store.callInReadTx()","Feature Addition"
"Query: eager relations","Database"
"JavaDocs for QueryBuilder.eager(...)","Documentation"
"change RelationInfo signature","Documentation"
"BreakForEach for Query.forEach()","Bug Fix"
"added query filtering","Database"
"add javadoc-style","Documentation"
"add .gitignore","Setup"
"add gradle files","Setup"
"add Jenkinsfile","Setup"
"add gradle files for tests","Setup"
"for linux64, add native dependency","Setup"
"fix version for native dependency","Setup"
"initial commit","Setup"
"Added DaoBase Project","Setup"
"stripped down because of AbstractDao","Setup"
"renamed table to entity","Refactoring"
"renamed column to property","Refactoring"
"docs, etc","Documentation"
"changed to android library, load by rowid","Refactoring"
"docs","Documentation"
"initial DaoTest project","Setup"
"new source for generating test entities","Testing"
"Generated entity, etc.","Database"
"Column abstraction, more compact DAO subclasses","Database"
"various fixes","Bug Fix"
"more property types, etc.","Feature Addition"
"swapped tests","Testing"
"added testAssignPk","Testing"
"minor","Other"
"value tests","Testing"
"added 2nd query, delete prepStmt","Database"
"added update for entities","Database"
"nullable update tests","Testing"
"initial AbstractDaoMaster","Setup"
"minor","Other"
"divided AbstractDaoTest","Setup"
"update lists, performance tests","Testing"
"deleleteAll, more performance tests","Testing"
"added performance test project for ORMLite","Testing"
"Collected performance data: greenDAO vs. ORMLite","Other"
"read uses constructor if available","Feature Addition"
"renamed package orm to dao, javadoc, etc.","Documentation"
"javadoc","Documentation"
"consider "has value" of protobuf","Database"
"updated performance table","Database"
"minor renames","Refactoring"
"added index support, property refactoring","Refactoring"
"ignore bin","Setup"
"out path must exist, changed src dir","Setup"
"added example project","Setup"
"added Example test","Setup"
"Applied Apache License 2.0","Setup"
"added refresh method, DaoException","Feature Addition"
"added DaoMaster, active entities, to-one relations","Database"
"prepared new Properties in DAO, +minor","Database"
"resolved flag for to-one","Bug Fix"
"Using Properties class in DAO","Feature Addition"
"make load return null for null key","Database"
"createAllTables, refactored tests, added dao master test","Testing"
"SQLiteOpenHelper etc.","Database"
"new DAO example","Setup"
"added run/callInTx","Feature Addition"
"added date type, added unit test generation","Testing"
"offset for read, getTablename in abstract DAO","Database"
"loadDeep","Database"
"queryDeep","Database"
"refreshed example","Refactoring"
"refined relation test","Testing"
"simplefied build","Refactoring"
"added error info, etc.","Documentation"
"make tests more configurable by sub classes","Testing"
"added testSemantics","Testing"
"prepared IdentityScope etc.","Setup"
"identity scope passing tests","Testing"
"refactored statements into separate classes","Refactoring"
"minor, tests for identity deep query","Testing"
"attachEntity, more tests, etc.","Testing"
"fixed loadDeep with idScope","Bug Fix"
"added intermediate values","Other"
"more intelligent to-one in entities","Database"
"fixes for not-null to-one relation, fix for loadDeep without results","Database"
"testToOneLoadDeepNull","Testing"
"fix & tests for to-one relations without matches in target table","Testing"
"DaoSession","Other"
"support identity scopes in session","Setup"
"DaoConfig","Setup"
"session tests","Testing"
"method renames to match JPA & Hibernate","Refactoring"
"detach, etc.","Other"
"Updated DaoExample","Refactoring"
"added docs and methods to session","Documentation"
"some dumb docs","Documentation"
"refreshed example jars (preview 2)","Setup"
"QueryBuilder concept","Database"
"quote columns for special names","Database"
"first Query working, refactoring","Refactoring"
"LazyList","Feature Addition"
"lazy list iterator","Feature Addition"
"uncached lazy lists, docs","Documentation"
"list iterator with auto close","Feature Addition"
"refactoring: TestEntityTestBase","Refactoring"
"testNotEqString","Testing"
"import entities","Setup"
"added GPL header","Feature Addition"
"some fixes","Bug Fix"
"added or to queryBuilder","Database"
"added AND","Database"
"removed simple OR","Database"
"Refactored where conditions for QueryBuilder, DaoLog, etc.","Database"
"partial fix for listIterator.previous","Bug Fix"
"minor fix","Bug Fix"
"fixed IN","Bug Fix"
"added javadocs and convenience for query builder","Documentation"
"preview 3","Other"
"renamed dao.test package","Refactoring"
"improved & extended performance tests","Testing"
"added test sub packages","Testing"
"performance work wip","Other"
"refactoring","Refactoring"
"lock optimization","Feature Addition"
"new performance figures","Feature Addition"
"getType, etc","Other"
"added  in(Collection)","Feature Addition"
"close cursor in tests","Testing"
"preparing to-ones without fk properties (experimental)","Database"
"Keep code for generated entities","Database"
"check value type, orderDesc","Database"
"tested and fixed Date/boolean property values","Testing"
"renamed DaoBase to DaoCore","Refactoring"
"added dummy ressources as a workaround for the git empty directory
problem","Bug Fix"
"(not)Null tests for query builder","Testing"
"enabled findbugs, minor fixes","Bug Fix"
"using Reference","Other"
"prepared: bind to-one values without fk property","Database"
"updated build","Setup"
"testDeleteAll","Testing"
"fixed order with multiple properties","Bug Fix"
"testDeleteAll","Testing"
"comment for not-null values","Documentation"
"fixed testAssignPk for protobuf tests, new line","Testing"
"kicked out Column again; using Property instead","Database"
"added useFkProperty flag to to-ones","Database"
"to-many skeleton","Database"
"first to-many working","Database"
"reset to-many, test refactoring","Database"
"new tests for resetting to-many relations","Testing"
"added order for to-many","Database"
"Switched to ADT14","Setup"
"to-many with custom join properties and multiple join properties","Database"
"active entities","Database"
"per entity flag for keep section, global entityActive deafult flag,
clean up, readme","Documentation"
"added missing license header to test classes","Testing"
"Added some license info and JavaDocs","Documentation"
"JavaDocs, limited scope of DaoConfig","Documentation"
"updated builds, example","Setup"
"readme for greenDAO","Documentation"
"managing additional imports to fix imports with different package, fixed
toMany problem in DAO template","Bug Fix"
"V1.0.1","Setup"
"superclass and interfaces for entities","Feature Addition"
"added tests for tree-like entities","Testing"
"Removed schema version from entities and DAOs","Database"
"query test package","Testing"
"added DeleteQuery","Database"
"allow to pass App class for project specific unit tests","Testing"
"better generics for test, still not perfect though","Testing"
"fix for building multiple queries with one queryBuilder","Database"
"Added performance results for Android 4.0 plus a comparison to 2.3","Feature Addition"
"created src-test","Testing"
"added bi-directional 1:N customer/order example","Database"
"added convenience methods to add relationships with a name, made Entity
constructor package-visible, added JavaDocs","Documentation"
"Removed schema version from JavaDoc of generated entities and DAOs","Documentation"
"execute SQL script in TX","Database"
"Using a fixed Java 1.6 compiler level for Android projects","Setup"
"Added LIMIT and OFFSET support for Queries","Database"
"Additional docs and unit tests for query limit&offset","Testing"
"qoute column names in where and order by clauses","Database"
"Feature list of 1.1 pre-release","Documentation"
"use LOCALIZED collation for Strings in ORDER BY","Database"
"moved order test into separate class","Refactoring"
"added test for order with upper/lower case and umlauts","Testing"
"added orderCustom","Feature Addition"
"added testOrderRaw","Feature Addition"
"default names for to-many relations end with "List" now","Database"
"Updated libs for example project","Setup"
"generated example code with current lib version","Setup"
"updated readme","Documentation"
"updated copyright year for javadocs","Documentation"
"5 test runs","Testing"
"updated ormlite libs to 4.34-SNAPSHOT and performance test against it","Testing"
"deprecated query: groupBy & having does not make sense for entities.
Method will be removed","Bug Fix"
"Don't assume that a Cursor has a CursorWindow (fix for Roboelectric)","Bug Fix"
"Additional check that key can be acquired (issue #5)","Bug Fix"
"updated readme for version 1.1.0 and 1.1.1","Documentation"
"added NOT IN condition (#23)","Bug Fix"
"preparing V1.1.1 release","Setup"
"print schema version before generating","Database"
"throw exception when trying to add relations to protobuf entities","Bug Fix"
"new flag for skipping table creation & dropping","Database"
"removed unnecessary DAO import for non-active entities","Refactoring"
"fixed typo with ordinal","Refactoring"
"moved jar to libs (ADT 17)","Refactoring"
"added adt dependencies to .classpath","Setup"
"added galaxy nexus performance data","Setup"
"preparing jars for V1.1.2","Setup"
"V1.1.2 release notes added","Setup"
"renamed to QuerySpecialNamesTest (missing Test suffix)","Refactoring"
"Added 'order' to special names test","Testing"
"changed order property to int","Refactoring"
"There might be other fields introduced by some tools, just ignore them
(see issue #28)","Other"
"Refelected Properties must be public also (issue #28)","Bug Fix"
"optimized modifier checking for Properties","Database"
"added testWhereWithSpecialNamesWithValues","Testing"
"make database accessible, refactoring of insert methods","Refactoring"
"added insertOrReplaceInTx and another updateInTx variation","Feature Addition"
"improved testInsertOrReplaceInTx","Testing"
"prepared readme for next version (unreleased)","Documentation"
"added CountQuery","Database"
"added logTableDump method","Feature Addition"
"Tests: added missing super.setUp and super.teardown, formatting","Testing"
"testAssignPk only for Long PKs","Testing"
"Test for String PK","Testing"
"make DAO and DaoSession transient in entities","Database"
"Set Cp1252 encoding in project properties","Setup"
"updated readme: transient and string PKs","Documentation"
"added AbstractDaoTestStringPk","Feature Addition"
"added callInTxNoException","Feature Addition"
"added deleteInTx to DAO, minor clean up","Feature Addition"
"added AUTOINCREMENT, added java docs for *Dao.Properties","Documentation"
"minor rename to pkAutoincrement","Refactoring"
"prepared unit test generation for String PK entities","Testing"
"idea for future use","Other"
"fixed updateKeyAfterInsert for non-long PKs, force NOT NULL for String
PK, added identity scope test for String PKs","Database"
"added testInsertWithoutPK","Database"
"fixed templates for PK-less entities, test fix","Database"
"added SqliteMaster meta entity","Database"
"fixed INDEX creation, added IndexTest","Database"
"updated readme for V1.2.0RC","Documentation"
"consider ifNotExists for CREATE INDEX also","Database"
"preparing V1.2.0 release","Setup"
"fixed createEntityWithRandomPk: create collision free PKs","Database"
"check executeInsert for -1","Database"
"added javaDoc for or() and and()","Documentation"
"outlining some ideas for asynch operations","Other"
"added properties to AsyncOperation","Feature Addition"
"TX merging and listeners","Other"
"added async completion features","Feature Addition"
"start AsyncSession in DaoSession, first two async tests up and running","Testing"
"added support for all operation types to AsyncOperationExecutor","Feature Addition"
"Added license headers to asnyc classes, added some async docs, minor
code improvements","Refactoring"
"added enqueueEntityOperation helper methods","Database"
"added remaining entity methods to AsyncSession","Database"
"prepared async runInTx and callInTx","Setup"
"added queries to async system","Database"
"added DeleteByKey, DeleteAll, Load, LoadAll, Count, and Refresh to async
operations","Database"
"added waitForCompletion methods to AsyncOperation, changed
AsyncOperationExecutor.waitForCompletion methods not to throw
InterruptedExecption","Bug Fix"
"added AbstractAsyncTest","Testing"
"updated README.md for V1.3.0 Preview (2012-??-??): New asynchronous API","Documentation"
"added basic async tests like TX, exception, etc.","Feature Addition"
"added a couple of missing breaks","Bug Fix"
"changed AsyncOperation.getResult semantics","Refactoring"
"moved async classes into async package","Refactoring"
"introduced AsyncDaoException","Bug Fix"
"Ignore FindBugs: increment of volatile is fine here because we use a
lock","Bug Fix"
"listenerMainThread","Other"
"first TX merging successful with test","Testing"
"added AsyncOperation.sequenceNumber","Feature Addition"
"added waitForMergeMillis","Feature Addition"
"added java-formater.xml (Eclipse Code Formatter) so other committers can
conform with greenDAO's code style","Feature Addition"
"added queryRawCreate returning a Query object","Database"
"added testLike","Testing"
"Merge branch 'master' of ssh://gitolite@greencentral.de/AndroidDao","Git Operation"
"dummy file to avoid errors after checkout (no res folder)","Bug Fix"
"check value is not an array where a primitive value is required for
condition","Other"
"added deleteByKeyInTx","Database"
"added DaoSessionConcurrentTest to verify deadlocks, fixed TX order in
executeInsertInTx","Testing"
"Do TX to acquire a connection before locking the stmt to avoid deadlocks","Bug Fix"
"throw nice exception if entity is updated or deleted with null key","Bug Fix"
"fixed potential deadlock in update/updateInTx","Bug Fix"
"refactoring: TestThread and doTx","Refactoring"
"DaoSessionConcurrentTest refactoring and 3 separate concurrent threads","Refactoring"
"removed redundant identityScope key removal","Refactoring"
"fixed delete locking order to avoid potential deadlocks","Bug Fix"
"fixed insertWithoutSettingPk locking","Bug Fix"
"added insertOrReplace to DaoSessionConcurrentTest","Testing"
"added testConcurrentQueryDuringTx: Query doesn't involve any statement
locking currently, but just to stay on the safe side...","Testing"
"prepared README.md for upcoming 1.3.0 release","Documentation"
"added some changes of V1.3.0 to README.md","Documentation"
"_testConcurrentLockAndQueryDuringTx: No connection for read can be
acquired while TX is active; this will deadlock!","Testing"
"locking order for DeleteQuery","Database"
"added DaoSessionConcurrentWALTest","Testing"
"prepared ThreadLocal for queries","Database"
"added forCurrentThread for queries, enforce thread check on queries,","Database"
"Added second thread tests to QueryThreadLocalTest","Testing"
"added CountQueryThreadLocalTest and DeleteQueryThreadLocalTest","Testing"
"Refactoring: move query classes in new query package","Refactoring"
"move IdentityScope related classes in their own package","Refactoring"
"fixed identityscope references, moved WhereCondition to query package","Refactoring"
"moved internally used classes into internal package","Refactoring"
"InternalDaoQueryInterface and InternalUnitTestDaoAccess","Testing"
"updated README.md to reflect refactorings","Documentation"
"added version property to mybuild.xml","Setup"
"added version property to mybuild.xml (generator)","Setup"
"fixed locking for to-many","Bug Fix"
"make to-one relations more thread safe","Database"
"added build.gradle","Setup"
"prepared maven central upload with gradle","Setup"
"fixed javadoc problems","Bug Fix"
"organized imports","Setup"
"set version to 1.3.0-beta-1","Setup"
"build.gradle for generator project","Setup"
"fixed build.gradle to include template files","Setup"
"runnable build.gradle for example generator project","Setup"
"dummy build.gradle for DaoExample","Setup"
"updated DaoExample to use V1.3.0","Setup"
"put greendao-1.3.0-beta-1.jar in libs for eclipse","Setup"
"updated freemarker to 2.3.19 for Eclipse","Setup"
"update year","Other"
"settings.gradle for root dir, tests for DaoGenerator","Setup"
"settings.gradle for root dir","Setup"
"added .travis.yml","Feature Addition"
"added empty build.gradle and use Java 6 for travis","Setup"
"build.gradle: We must check if authentication info is available","Setup"
"build.gradle: sign only if signing info is available","Setup"
"remove DaoExample because R missing from build","Refactoring"
"removed redundant != null","Refactoring"
"switched to gradle Eclipse plugin for generator projects","Setup"
"setting version to 1.3.0","Setup"
"setting version to 1.3.0, updated README.md","Documentation"
"fixed dependencies to 1.3.0","Setup"
"added getSelectKeys to TableStatements","Database"
"Make DaoTest a gradle project, doesn't work with android build system
0.3 yet","Setup"
"'provided' dependencies for main build.gradle","Setup"
"ADT 22","Setup"
"join drafting","Other"
"export android lib in .classpath","Setup"
"added dontCreateApplicationDuringSetUp to DbTest","Testing"
"initial content provider generation","Setup"
"added preferedRepo","Feature Addition"
"Fixed typo.","Bug Fix"
"Merge pull request #95 from mharper/master

Fixed typo.","Git Operation"
"single entity per content provider for now","Database"
"Merge branch 'master' of ssh://github.com/greenrobot/greenDAO","Git Operation"
"fixed combined where clauses for count queries","Database"
"don't care about groovy.compiler.level (eclipse setting)","Setup"
"Switched version to 1.3.2","Setup"
"1.3.3-SNAPSHOT: Remove table aliases, not supported for DELETE queries","Database"
"removed ThreadLocal for Query to fix leaks","Bug Fix"
"introduced AbstractQueryData, renamed test","Database"
"better generalization of AbstractQueryData","Refactoring"
"some clean up","Refactoring"
"DeleteQuery also uses QueryData now","Database"
"minor test improvement","Testing"
"index bug fix within gc","Bug Fix"
"added testLoadIdScope_load","Testing"
"fixed a concurrency problem with attached entities (#101), added
AnActiveEntityMultithreadingTest","Bug Fix"
"V1.3.3 release","Setup"
"big test refactoring: don't use ApplicationTestCase as base class, which can be problematic when creating the application during setUp()","Testing"
"ignore IntelliJ stuff","Setup"
"working gradle build for instTest project","Setup"
"v1.3.5","Setup"
"offer some convenience methods to create new Application objects in DbTest","Testing"
"set generator version to 1.3.1-SNAPSHOT","Setup"
"added V1.3.4 and V1.3.5 to changelog","Setup"
"V1.3.6","Setup"
"added getNotificationUri to comply with API level 19","Feature Addition"
"DeleteQuery: Don't use tableName here because it causes trouble when table name ends with tablePrefix.","Database"
"V1.3.7","Setup"
"fix schema version with 4 or more digits","Database"
"gradlew (1.12)","Setup"
"adjustments for android build system 0.10.2, trying android with travis","Setup"
"trying android with travis","Setup"
"travis: make gradlew executable","Setup"
"using androidTestCompile, extended .gitignore","Testing"
"travis: start emu","Setup"
"travis: added missing file wait_for_emulator","Bug Fix"
"travis: fix","Bug Fix"
"travis: +x for wait_for_emulator","Setup"
"travis: dumb terminal","Setup"
"travis: only oraclejdk7","Setup"
"Generator V1.3.1 release","Setup"
"travis: adjusted command order, added build state to README.md","Setup"
"link to travis","Other"
"Rethrow initial exception in updateInTx if endTransaction also throws","Bug Fix"
"updated README.md","Documentation"
"Lock must be locked when entering LazyList.loadEntity","Other"
"catch exceptions when ending merged transactions, added some JavaDocs","Documentation"
"gradle updates","Setup"
"added FLAG_TRACK_CREATOR_STACKTRACE, sessionFlags","Bug Fix"
"updated README.md","Documentation"
"CRLF -> LF","Other"
"updated generator dependencies, gradle 2.4","Setup"
"added outDirEntity to generator","Feature Addition"
"Merge branch 'master' into join","Git Operation"
"extracted WhereCollector from QueryBuilder, Join constructor","Database"
"sketching JOIN API","Database"
"first working Join","Database"
"added SqlUtils.appendProperty, checkLog, testJoinSimpleParameterValue","Database"
"JOINs are not supported for DELETE queries, testJoinDelete, testJoinCount","Database"
"basic JavaDoc for joins","Documentation"
"Query: formatting, javadoc","Documentation"
"testJoinMixedParameterValues","Testing"
"joins based on joins","Database"
"bye bye Eclipse","Setup"
"bye bye Eclipse formatting settings","Setup"
"CRLF -> LF, remaining files","Other"
"make internal properties package private (#184)","Refactoring"
"Revert 'make internal properties package private (#184)'

This reverts commit d467bf5be97801b45b53822b3f0be083940ed016.","Git Operation"
"moved TestDaoGenerator into module of its own","Refactoring"
"quote columns in PropertyOrderList","Database"
"javadoc to mark internal property used by templates","Documentation"
"setParameter for Date and Boolean values, fixes #58","Bug Fix"
"typos","Bug Fix"
"single-quote column for indexes and to-many order (#fixes 68)","Bug Fix"
"place repository in root build.gradle","Setup"
"place repository in root build.gradle","Setup"
"throw if interface defined more than once (fixes #87)","Bug Fix"
"always quote tables (fixes #97)","Bug Fix"
"fix for implementsInterface","Bug Fix"
"use double quote for table and property names in templates","Database"
"quick fix for CP compilation issues","Bug Fix"
"fixed some typos, fixes #102","Bug Fix"
"prepare model for to-many with join","Database"
"updated templates for to-many with join","Database"
"added testToManyWithJoin","Testing"
"Add execute bit for Gradle wrapper.","Setup"
"Merge pull request #195 from johnjohndoe/file-permissions

Add execute bit for Gradle wrapper.","Git Operation"
"fix for LazyList.sublist (fixes #146)","Bug Fix"
"typo","Bug Fix"
"setting the base for custom property types based on converters","Setup"
"add additional imports for custom types and converters","Setup"
"use custom types in entity","Database"
"use custom types in dao, simplify dao with databaseValueExpression, using 1L and 0L for better readability","Refactoring"
"use custom types in dao.readEntity, simplify dao with getEntityValueExpression, using 1L and 0L for better readability","Refactoring"
"added some value tests for CustomTypeEntityTest","Testing"
"added codeBefore* for properties","Feature Addition"
"new entity version quotes table name","Database"
"use codeBefore* in DateEntity","Database"
"set version to 2.0.0-SNAPSHOT, updated README.md","Documentation"
"added addImport for entities","Database"
"moved changelog to separate file","Refactoring"
"started feature overview","Setup"
"added 'Add greenDAO to your project' section","Other"
"moved PropertyConverter into converter package","Refactoring"
"prepared IntegerListConverter","Feature Addition"
"Version 2.0.0","Setup"
"added AbstractQueryWithLimit, fixed some TODOs and typos","Database"
"2.1.0-SNAPSHOT","Setup"
"first version of CursorQuery","Setup"
"fix javadoc","Documentation"
"sketching a Database abstraction","Database"
"more Database abstraction","Database"
"more Database abstraction","Database"
"Database abstraction for templates","Database"
"SQLCipher database implementation","Database"
"fixes, all unit tests are green again","Bug Fix"
"setting version 2.1.0-SNAPSHOT also for generator","Setup"
"gradle for ormlite perf test project","Setup"
"Actually add dependencies for OrmLite perf test.","Testing"
"Merge pull request #209 from greenrobot-team/fix-missing-dependencies

Actually add dependencies for OrmLite perf test.","Git Operation"
"Specify artifact ids in build.gradle files.

- Remove settings.gradle files.","Setup"
"Update Android SDK build tools to 23.0.0.

- https://developer.android.com/tools/revisions/build-tools.html
- Also update Android Plugin for Gradle to 1.3.1.
- http://tools.android.com/tech-docs/new-build-system","Setup"
"Disable sudo for travis, auto uses new container-based builders.","Refactoring"
"Fix Android tests failing due to timeouts.

- http://stackoverflow.com/questions/28949722/android-tests-fail-on-travis-with-shellcommandunresponsiveexception","Bug Fix"
"Merge pull request #210 from greenrobot-team/fix-project-import

Fix project import","Git Operation"
"Merge branch 'master' into DbAbstraction

Conflicts:
	DaoGenerator/build.gradle","Git Operation"
"Make DaoExample a proper Android app project.

- Use latest greenDao release 2.0.0.
- Fix https://github.com/greenrobot/greenDAO/issues/155.","Setup"
"Merge pull request #212 from greenrobot-team/fix-example-app

Fix example app","Git Operation"
"Update ORMlite to 4.48.

- http://ormlite.com/changelog.txt
- Also add as a gradle dependecy, remove library jars.","Setup"
"Clean up ORMlite test config.","Refactoring"
"Add jcenter to global repositories.","Feature Addition"
"Add performance test for realm.

- Add realm 0.82.1.
- Still have to use old JUnit 3 ApplicationTestCase as there is no new equivalent for AndroidJUnitRunner :(","Testing"
"Add property access test to greenDAO perf test.

- Simply get every property of the entity under test. Logged as "access-all-1" and "access-all-2".","Testing"
"Add BuildConfig flags for enabling perf tests, disabled by default.","Testing"
"For completeness: access properties in ORMLite perf test.","Testing"
"Set perf test batch size to 10.000, do 8 runs.","Testing"
"Add perf test for ActiveAndroid.","Testing"
"Properly call super setUp and tearDown test methods.","Testing"
"Measure deletion time in third-party perf tests.","Testing"
"Also run deleteAll after last run.","Testing"
"Add space before time unit.

- Also add '(batch)' flag to load log output.
- Fix realm delete log.","Other"
"List count of entities for greendao access test.","Testing"
"Move perf tests to their own directory.

- Also clean up OrmLite test, restructure to recommended gradle folder hierarchy.","Refactoring"
"Merge pull request #226 from greenrobot-team/extend-performance-tests

Extend performance tests","Git Operation"
"Add Android support library repository to travis

- Fixes build breakage after adding dependency to Android support library.","Bug Fix"
"Merge pull request #227 from greenrobot-team/add-support-lib-travis

Add Android support library repository to travis","Git Operation"
"Fix codeBeforeSetter, added codeBeforeGetterAndSetter","Feature Addition"
"Merge branch 'master' of ssh://github.com/greenrobot/greenDAO","Git Operation"
"fix async queries","Database"
"moving to standard src folders","Refactoring"
"adding robolectric tests","Testing"
"Merge branch 'master' into DbAbstraction","Git Operation"
"added getAllDaos to DaoSession","Other"
"added changes until now for upcoming V2.1.0","Setup"
"added Parse perf test","Testing"
"Set SDK and build tools in root gradle, update travis config.

- Compile with SDK level 23.
- Use build tools 23.0.1.","Setup"
"Fix case of DaoCore source file directory name.","Refactoring"
"Merge pull request #232 from greenrobot-team/set-sdk-in-root

Set SDK level in root Gradle config, fix travis build.","Git Operation"
"Comparison performance test for the Cupboard library.","Testing"
"Don't run tests by default.","Testing"
"Use spaces for indentation.","Refactoring"
"Simplify log output.","Documentation"
"Use SDK level settings from root config.","Setup"
"Merge pull request #231 from greenrobot-team/erickok-cupboard-performance-test

Cupboard performance test","Git Operation"
"Make Parse test an instrumented test.

- Also update parse-android to 1.10.1.","Testing"
"Add Couchbase perf test.

- Take this with a grain of salt, as Couchbase is a NoSQL (document-based) data store. All ops can only be one-by-one, no batching is supported.","Testing"
"Add Firebase performance test.

- Use firebase-client-android 2.3.1.","Testing"
"Merge pull request #230 from greenrobot-team/cleanup-parse-test

Make Parse test an instrumented test","Git Operation"
"Merge pull request #234 from greenrobot-team/perf-test-couchbase

Add Couchbase perf test","Git Operation"
"Merge pull request #233 from greenrobot-team/perf-test-firebase

Add Firebase performance test.","Git Operation"
"Improve Cupboard test.

- Shorten log tag.
- Add proper start log.
- Run delete within test.
- Formatting.","Testing"
"Add concept of indexed string entity query perf test.

- Added for cupboard first.","Testing"
"Extract string and index generator to common module.","Refactoring"
"Clean up PerformanceTestActiveAndroid.","Refactoring"
"Add indexed string test for Active Android.

- Add dependency on Common module.
- Update support-v4 to 23.0.1.
- Do database setup within tests, tear down remains global.","Setup"
"Add tweaks from Active Android indexed test to cupboard test.

- Create entities after database setup.
- Add log output between steps.","Testing"
"Clean up OrmLite test.","Refactoring"
"Use provided OrmLiteSqliteOpenHelper, fix minimal entity test.","Database"
"Add indexed string test for ORMLite.

- Add dependency on Common module.","Testing"
"Add IndexedStringEntity to dao test module.","Testing"
"Add indexed string test for greenDAO.","Testing"
"Actually query for strings in Active Android test.","Testing"
"Add runs to greendao indexed test.","Testing"
"Add runs to Active Android indexed test.","Testing"
"Add runs to cupboard indexed test.","Testing"
"Add runs to ORMLite indexed test.","Testing"
"Initial commit","Setup"
"Initial commit

MVC structure set up.","Setup"
"Added gitignore","Setup"
"Tested commit","Testing"
"Merge pull request #1 from EmmaPesjak/skeleton_view

Skeleton view","Git Operation"
"Exit handling

Feature: Added functionality for closing the application.","Feature Addition"
"Merge pull request #2 from EmmaPesjak/exit_handling

Exit handling","Git Operation"
"Layout

Feature:Configured a grid layout to have one side menu bar and one expandable window for the rest of the application.","Styling/Frontend"
"Menubar created

Feature: The menu bar is configured and a dark/light mode has been added.","Styling/Frontend"
"Merge pull request #3 from EmmaPesjak/menubar

Menubar","Git Operation"
"Refactored view

Refactored mainview to be more readable aby separating code into methods.","Refactoring"
"Added diagrams

Feature: Added charts to overview with test data, using matplot.lib","Styling/Frontend"
"Refactored diagrams

Changed layout of diagrams to a grid","Refactoring"
"Merge pull request #4 from EmmaPesjak/diagrams

Diagrams","Git Operation"
"Feature: user specific data

Added functionality so that a new window opens when selecting a user.","Feature Addition"
"Merge pull request #5 from EmmaPesjak/user_specific

Feature: user specific data","Git Operation"
"Feature

Added frames to the user menu layout","Styling/Frontend"
"Merge pull request #6 from EmmaPesjak/user_analysis

Feature","Git Operation"
"Feature

Added diagrams for specific user.","Feature Addition"
"Feature

Added info-text in info-bar","Styling/Frontend"
"Merge pull request #7 from EmmaPesjak/user-diagrams

User diagrams","Git Operation"
"Feature

Added the event listener for the repo-input, which will be passed to model for data mining","Styling/Frontend"
"Merge pull request #8 from EmmaPesjak/repository-mining

Feature","Git Operation"
"Fix: refactor

Refactored and moved cominstance attributes to the __init__ metod.","Refactoring"
"Fix: refactor

Refactored and added comments","Refactoring"
"Merge pull request #9 from EmmaPesjak/view_cleanup

View cleanup","Git Operation"
"Pydriller set up

Set up PyDriller and retrieved data from repository path","Setup"
"Author git mining

Retrieves authors from provided repository","Feature Addition"
"Feature

Retrieves correct amount of commits for project","Feature Addition"
"Feature

Writes authors with its commits to json file","Feature Addition"
"Feature

Added method for getting total amount of commits, to be updated in view.","Feature Addition"
"Merge pull request #10 from EmmaPesjak/repository-mining

Repository mining","Git Operation"
"Fix: Diagram display/update

Changed so that the diagrams and repo information is only displayed after a repository has been selected. The diagrams/infobar is also updated after a new repo is selected.","Styling/Frontend"
"Feature: Loading repo in sepatate thread

Added functionality for fetching repositories in a separate thread. Also added a loading widget","Feature Addition"
"Merge pull request #11 from EmmaPesjak/widow-update

Widow update","Git Operation"
"Feature: DataVisualizer

Break out the diagram making into a separate class.","Refactoring"
"Fix: loading

Fixed so that all old data is removed from the GUI and only the loading text is visible while getting new repositories.","Styling/Frontend"
"Merge pull request #12 from EmmaPesjak/data_visualizer

Data visualizer","Git Operation"
"Feature

Added a filtering method for ignoring merge commits","Feature Addition"
"Feature for retrieving all data

Retrieves authors, commit messages with timestamps, and the files + filepaths that have been changed.","Database"
"Feature: Added a SQLite db for storing commit data","Database"
"Feature: Empty the database on exit","Database"
"Feature: Gets total amount of commits","Feature Addition"
"Feature: Gets most active month","Feature Addition"
"Feature: DB Clears for new repo

Added functionality for clearing the database when user enters a new repo","Database"
"Feature: Added CommitAnalyzer

Added a new class with a tuple of categories, where to analyze commit messages using NLP","Feature Addition"
"Merge pull request #13 from EmmaPesjak/author-filtering

Author filtering","Git Operation"
"Feature: Only returns the names of authors

The get_authors now only returns the names in a list instead of author object.","Feature Addition"
"Bug: Fixed bug with returning author files

Fixed issue with returning the author commits and files.","Bug Fix"
"Fixed bug: Timeline count

Fixed bug related to returning all 12 months commit count","Bug Fix"
"Feature: Fixed all select endpoints

Added och adjusted all endpoints","Database"
"Fix: Commit messages

Fixed so it returns a list instead of list of tuples","Bug Fix"
"Merge pull request #14 from EmmaPesjak/db-requests

Db requests","Git Operation"
"Feature: added preprocessing of data","Feature Addition"
"Merge pull request #15 from EmmaPesjak/nlp

Feature: added preprocessing of data","Git Operation"
"Feature: Added checks for input

Added a check for verifying the git repo, with displaying an error message to user","Styling/Frontend"
"Fix: Refined input check","Refactoring"
"Merge pull request #16 from EmmaPesjak/input-check

Input check","Git Operation"
"Feature: continued the preprocessing of data with vectorization.","Feature Addition"
"Merge pull request #17 from EmmaPesjak/vectorization

Feature: continued the preprocessing of data with vectorization.","Git Operation"
"fixed so that commit messages are lowercased","Feature Addition"
"Feature: added LDA topic modelling","Feature Addition"
"Merge pull request #18 from EmmaPesjak/lowercasing_commits

fixed so that commit messages are lowercased","Git Operation"
"Merge pull request","Git Operation"
"Feature: category mapping and removal of low frequency words","Feature Addition"
"Merge pull request #20 from EmmaPesjak/low_frequency

Feature: category mapping and removal of low frequency words","Git Operation"
"Docs: Notes on categorizing

TODO's; how to find context to categorize","Documentation"
"Fixed categories","Bug Fix"
"Merge pull request #21 from EmmaPesjak/mapping

Docs: Notes on categorizing","Git Operation"
"Feature: Added priority keywords

Added dictionary for priority words in categorization","Feature Addition"
"Fix: Refined categories and added stop words","Feature Addition"
"Refined comments","Documentation"
"Merge pull request #22 from EmmaPesjak/mapping

Mapping","Git Operation"
"Feature: Added substrings in mapping

Added checks for matching substrings in mapping to categories","Feature Addition"
"Merge pull request #23 from EmmaPesjak/category-fix

Feature: Added substrings in mapping","Git Operation"
"Fix: Issue with commits dates","Bug Fix"
"Merge pull request #24 from EmmaPesjak/category-fix

Fix: Issue with commits dates","Git Operation"
"fixed bug mianloop not on main thread","Bug Fix"
"Merge pull request #25 from EmmaPesjak/diagram_update

fixed bug mianloop not on main thread","Git Operation"
"moved thread management from view to model","Refactoring"
"Merge pull request #26 from EmmaPesjak/view_clean

moved thread management from view to model","Git Operation"
"Added todo comments","Documentation"
"Feature: Write authors with commits to files","Feature Addition"
"Feature: Write top 5 files","Feature Addition"
"Deleted calc-data","Refactoring"
"Merge pull request #27 from EmmaPesjak/author-fix

Author fix","Git Operation"
"Feature: Monthly commits by contributor added","Feature Addition"
"Merge pull request #28 from EmmaPesjak/author-fix

Feature: Monthly commits by contributor added","Git Operation"
"added comments to the code!","Documentation"
"fixed hardcoding of total commits","Refactoring"
"rebased main","Git Operation"
"working on bug","Bug Fix"
"Merge pull request #29 from EmmaPesjak/view_cleaning

View cleaning","Git Operation"
"Write monthly commits to file","Feature Addition"
"Merge pull request #30 from EmmaPesjak/author-fix

Write monthly commits to file","Git Operation"
"Fixed bug were old cashed data were used in the diagrams.","Bug Fix"
"Fixed bug that created errors if any non-latin characters were in user names","Bug Fix"
"fixed diagram overlap","Bug Fix"
"Merge pull request #31 from EmmaPesjak/data_bug

Data bug","Git Operation"
"Fixed to reverse the month list","Bug Fix"
"Fixed gitignore repo_stats","Git Operation"
"Merge pull request #32 from EmmaPesjak/reverse-list

Reverse list","Git Operation"
"Fixed diagram layout","Styling/Frontend"
"added topics to categories","Feature Addition"
"Merge pull request #33 from EmmaPesjak/diagrams

Diagrams","Git Operation"
"Changed top 5 to top 10","Feature Addition"
"Merge pull request #34 from EmmaPesjak/top-10

Changed top 5 to top 10","Git Operation"
"Feature: Moved topicmodeling to run independently on a script for training","Refactoring"
"Merge pull request #35 from EmmaPesjak/author-commits

Feature: Moved topicmodeling to run independently on a script for tra…","Git Operation"
"removed some hard coded values","Refactoring"
"fixed hard coded over all statistics","Refactoring"
"fixed hard coded user statistics, added reading from file","Refactoring"
"changed formatting of monthly_commits_by_contributor","Refactoring"
"removed hard coded user statistics and updated diagrams!","Refactoring"
"added colors and fixed deprecation error","Bug Fix"
"added a check that data exists for specific users when creating diagrams","Feature Addition"
"Merge pull request #36 from EmmaPesjak/remove_hard_coding

Remove hard coding","Git Operation"
"analyze work in progress","Feature Addition"
"merged done","Git Operation"
"Merge pull request #37 from EmmaPesjak/used-load-model

Used load model","Git Operation"
"include topic model on gitignore","Git Operation"
"Merge pull request #38 from EmmaPesjak/used-load-model

include topic model on gitignore","Git Operation"
"Feature: Summarizes the categories

Summarizes categories with amount of git commits.","Feature Addition"
"Feature: Write summary to file

Writes summary in categories to file","Feature Addition"
"Merge pull request #39 from EmmaPesjak/used-load-model

Used load model","Git Operation"
"feature: removed the hard coded values of type of commit.","Refactoring"
"refactored user diagrams so that those with availiable data will be displayed","Refactoring"
"refactored overview diagrams so that those with availiable data will be displayed","Refactoring"
"refactored the info text to handle null values","Refactoring"
"Merge pull request #40 from EmmaPesjak/view_types

View types","Git Operation"
"cleaned some code and added sql query for gettin all authors and their commits","Database"
"feature: added functionality to analyze each contributor's commits","Feature Addition"
"Merge pull request #41 from EmmaPesjak/cleaning

Cleaning","Git Operation"
"Retrained the model, cleaned the database, working on performance","Refactoring"
"Performance: Improved performance

Preprocess in batches to improve he speed","Refactoring"
"minor changed in db","Database"
"Improved the lda model by adding keywords in categories","Feature Addition"
"Added a new class for git mining, instead of using database","Feature Addition"
"Merge pull request #42 from EmmaPesjak/performance

Performance","Git Operation"
"fixed bug where error message when wrong repo url was entererd, also fixed better handling of the loading indicator and removal of user select.","Bug Fix"
"fixed bug where the app crasched upon closing","Bug Fix"
"changed timeline and commitsByAuthors from database to direct git mining","Refactoring"
"changed users top files and timeline from database to direct git mining","Refactoring"
"remove last database methods and implemented a timer to test if this is faster","Database"
"optimized time between db and git traversal","Database"
"fixed error message","Bug Fix"
"Merge pull request #43 from EmmaPesjak/error_handling

Error handling","Git Operation"
"feature, the model can now be tranied on several repositories","Feature Addition"
"Merge pull request #44 from EmmaPesjak/model_trainer

feature, the model can now be tranied on several repositories","Git Operation"
"feature: added a reset function for the model","Git Operation"
"bug fixed gitignore","Bug Fix"
"added categories and retrained the model","Feature Addition"
"Merge pull request #45 from EmmaPesjak/reset_model

Reset model","Git Operation"
"Removed filepath from db","Database"
"git traversal instead of db","Database"
"Merge pull request #46 from EmmaPesjak/git-traversal

Git traversal","Git Operation"
"improved and clean topic modelling","Refactoring"
"Merge pull request #47 from EmmaPesjak/topic

improved and clean topic modelling","Git Operation"
"styled the diagrams in the gui","Styling/Frontend"
"Feature: added help box implementation","Feature Addition"
"Merge pull request #48 from EmmaPesjak/diagram_naming

Diagram naming","Git Operation"
"Feature: added LDA perplexity and coherence","Feature Addition"
"Merge pull request #49 from EmmaPesjak/topic_coherence_perplexity

Feature: added LDA perplexity and coherence","Git Operation"
"removed the identifier in model","Refactoring"
"Added stop words and refined the params.

Current values; p=-6.678, c=0.568","Feature Addition"
"Improved model; p = -7.09, c = 0.55 on 4 repos","Feature Addition"
"Styling: Added a label for repository on main view","Styling/Frontend"
"Merge pull request #50 from EmmaPesjak/lda-model

Lda model","Git Operation"
"Refactor: cleaned the code","Refactoring"
"Merge pull request #51 from EmmaPesjak/cleaner

Refactor: cleaned the code","Git Operation"
"Added comment descriptions in the data_visualizer class","Documentation"
"Added comment descriptions in the main_view class","Documentation"
"Added comment descriptions in the main_controller class","Documentation"
"Added comment descriptions in the git_traversal class","Documentation"
"Merge pull request #52 from EmmaPesjak/comments

Comments","Git Operation"
"Added description to batch-analyzer, db-handler, and modeltrainer.","Documentation"
"Added description to main model","Documentation"
"Done with description in main model.","Documentation"
"Merge pull request #53 from EmmaPesjak/demo

Demo","Git Operation"
"feature addition: added a transformer analyzer","Feature Addition"
"added folders for transformers","Feature Addition"
"bugfix, fixed bug where transformers import didn't work","Bug Fix"
"Merge pull request #54 from EmmaPesjak/transformers

feature addition: added a transformer analyzer","Git Operation"
"Test push","Testing"
"Added model files and customized dataset","Feature Addition"
"Fixed error with git operations","Bug Fix"
"Added BERT transformers model","Feature Addition"
"Merge pull request #55 from EmmaPesjak/hejbertmodel

Hejbertmodel","Git Operation"
"Added more messages, improved model prediction","Feature Addition"
"Refactored and deleted unused files.","Refactoring"
"Merge pull request #56 from EmmaPesjak/train-data

Train data","Git Operation"
"Cleaned the transformers code and added a lot of descriptive comments","Refactoring"
"Merge pull request #57 from EmmaPesjak/cleanup_model

Cleaned the transformers code and added a lot of descriptive comments","Git Operation"
"Added functionality to extract javadoc in a repository for modified files","Feature Addition"
"Merge pull request #58 from EmmaPesjak/javadoc

Added functionality to extract javadoc in a repository for modified f…","Git Operation"
"Added readme check","Feature Addition"
"Merge pull request #59 from EmmaPesjak/javadoc

Added readme check","Git Operation"
"Added git commit mining for labeling","Feature Addition"
"Merge pull request #60 from EmmaPesjak/git-mining

Added git commit mining for labeling","Git Operation"